.r9qmolu{border:var(--r9qmolu-0);}.r9qmolu:first-child{border-top-left-radius:var(--borderRadius-100);border-top-right-radius:var(--borderRadius-100);}.r9qmolu:last-child{border-bottom-left-radius:var(--borderRadius-100);border-bottom-right-radius:var(--borderRadius-100);}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2FwcHMvZXh0ZW5zaW9uL3NyYy9zY3JlZW5zL1RyYWRlL0VudHJ5U2VsZWN0b3IvUm93LnRzeCJdLCJuYW1lcyI6WyIucjlxbW9sdSJdLCJtYXBwaW5ncyI6IkFBK0ZpQkEiLCJmaWxlIjoiL3dvcmtzcGFjZXMvYXBwcy9leHRlbnNpb24vc3JjL3NjcmVlbnMvVHJhZGUvRW50cnlTZWxlY3Rvci9Sb3cudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGRlZmluZU1lc3NhZ2VzLCB1c2VJbnRsIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdAbGluYXJpYS9yZWFjdCc7XG5pbXBvcnQgeyBIU3RhY2sgfSBmcm9tICdAY2JocS9jZHMtd2ViL2xheW91dC9IU3RhY2snO1xuaW1wb3J0IHsgUHJlc3NhYmxlIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi9zeXN0ZW0vUHJlc3NhYmxlJztcblxuY29uc3QgbWVzc2FnZXMgPSBkZWZpbmVNZXNzYWdlcyh7XG4gIFJvd0xhYmVsOiB7XG4gICAgZGVmYXVsdE1lc3NhZ2U6ICdUaGUge25hbWV9JyxcbiAgICBkZXNjcmlwdGlvbjogJ0EgbGFiZWwgZm9yIGVhY2ggcm93JyxcbiAgfSxcbn0pO1xuXG50eXBlIFJvd1Byb3BzID0ge1xuICBvblByZXNzOiAoKSA9PiB2b2lkO1xuICBoYXNFcnJvcjogYm9vbGVhbjtcbiAgYTExeUxhYmVsPzogc3RyaW5nO1xuICBoYXNTZWNvbmRhcnlUZXh0OiBib29sZWFuO1xuICBkaXNhYmxlU2VsZWN0aW9uOiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBib3JkZXJlZFRvcDogYm9vbGVhbjtcbiAgbm9uVHJ1bmNhdGVkPzogYm9vbGVhbjtcbiAgZGF0YUVsZW1lbnRIYW5kbGU/OiBzdHJpbmc7XG59O1xuXG5mdW5jdGlvbiBSb3dDb250ZW50KHtcbiAgY2hpbGRyZW4sXG4gIGJvcmRlcmVkVG9wLFxuICBoYXNFcnJvcixcbiAgaGFzU2Vjb25kYXJ5VGV4dCxcbiAgbm9uVHJ1bmNhdGVkLFxuICBkYXRhRWxlbWVudEhhbmRsZSxcbn06IFBpY2s8XG4gIFJvd1Byb3BzLFxuICB8ICdjaGlsZHJlbidcbiAgfCAnaGFzRXJyb3InXG4gIHwgJ2hhc1NlY29uZGFyeVRleHQnXG4gIHwgJ2JvcmRlcmVkVG9wJ1xuICB8ICdub25UcnVuY2F0ZWQnXG4gIHwgJ2RhdGFFbGVtZW50SGFuZGxlJ1xuPikge1xuICBjb25zdCBwYWRkaW5nWSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmIChub25UcnVuY2F0ZWQpIHJldHVybiAwO1xuICAgIHJldHVybiBoYXNTZWNvbmRhcnlUZXh0ID8gMSA6IDI7XG4gIH0sIFtub25UcnVuY2F0ZWQsIGhhc1NlY29uZGFyeVRleHRdKTtcblxuICByZXR1cm4gKFxuICAgIDxSb3dTdHlsZSBkYXRhLXRlc3RpZD17ZGF0YUVsZW1lbnRIYW5kbGV9IGhhc0Vycm9yPXtoYXNFcnJvcn0+XG4gICAgICA8SFN0YWNrXG4gICAgICAgIHBhZGRpbmc9e25vblRydW5jYXRlZCA/IDAgOiAyfVxuICAgICAgICBwYWRkaW5nWT17cGFkZGluZ1l9XG4gICAgICAgIGJvcmRlcmVkVG9wPXtib3JkZXJlZFRvcH1cbiAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiXG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvSFN0YWNrPlxuICAgIDwvUm93U3R5bGU+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSb3coe1xuICBvblByZXNzLFxuICBkaXNhYmxlU2VsZWN0aW9uLFxuICBjaGlsZHJlbixcbiAgZGF0YUVsZW1lbnRIYW5kbGUsXG4gIGExMXlMYWJlbCxcbiAgLi4ucHJvcHNcbn06IFJvd1Byb3BzKSB7XG4gIGNvbnN0IHsgZm9ybWF0TWVzc2FnZSB9ID0gdXNlSW50bCgpO1xuICAvLyBUT0RPOiBKYXJyZXR0IC0gY2hhbmdlIHRoaXMgcHJvcCBzbyB0aGUgcHJlc3NhYmxlIGNhbiBiZSBwcm9wZXJseSBkaXNhYmxlZFxuXG4gIHJldHVybiAoXG4gICAgPFByZXNzYWJsZVxuICAgICAgYXM9XCJidXR0b25cIlxuICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVTZWxlY3Rpb259XG4gICAgICBvbkNsaWNrPXtvblByZXNzfVxuICAgICAgbm9TY2FsZU9uUHJlc3NcbiAgICAgIGJhY2tncm91bmQ9XCJiZ1wiXG4gICAgICBib3JkZXJSYWRpdXM9ezIwMH1cbiAgICAgIHRyYW5zcGFyZW50V2hpbGVJbmFjdGl2ZVxuICAgICAgdGVzdElEPXtkYXRhRWxlbWVudEhhbmRsZX1cbiAgICAgIGRhdGEtZWxlbWVudC1oYW5kbGU9e2RhdGFFbGVtZW50SGFuZGxlfVxuICAgICAgYXJpYS1sYWJlbD17YTExeUxhYmVsIHx8IGZvcm1hdE1lc3NhZ2UobWVzc2FnZXMuUm93TGFiZWwsIHsgbmFtZTogZGF0YUVsZW1lbnRIYW5kbGUgfSl9XG4gICAgPlxuICAgICAgPFJvd0NvbnRlbnQgey4uLnByb3BzfT57Y2hpbGRyZW59PC9Sb3dDb250ZW50PlxuICAgIDwvUHJlc3NhYmxlPlxuICApO1xufVxuXG50eXBlIFJvd1N0eWxlUHJvcHMgPSB7XG4gIGhhc0Vycm9yPzogYm9vbGVhbjtcbiAgbm9Cb3JkZXI/OiBib29sZWFuO1xufTtcblxuY29uc3QgUm93U3R5bGUgPSBzdHlsZWQuZGl2PFJvd1N0eWxlUHJvcHM+YFxuICBib3JkZXI6ICR7KHApID0+IChwLmhhc0Vycm9yID8gYDFweCBzb2xpZCB2YXIoLS1jb2xvci1iZ05lZ2F0aXZlKWAgOiAnJyl9O1xuICAmOmZpcnN0LWNoaWxkIHtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiB2YXIoLS1ib3JkZXJSYWRpdXMtMTAwKTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogdmFyKC0tYm9yZGVyUmFkaXVzLTEwMCk7XG4gIH1cbiAgJjpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiB2YXIoLS1ib3JkZXJSYWRpdXMtMTAwKTtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogdmFyKC0tYm9yZGVyUmFkaXVzLTEwMCk7XG4gIH1cbmA7XG4iXX0=*/
@layer cds{.overflowStyle-o1npfhjk{overflow:auto;text-overflow:unset;white-space:normal;}
.truncationStyle-t1vpzve9{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0;}}
@layer cds{.baseStyle-b1d7nvbf{min-width:0;-webkit-box-flex:2;-webkit-flex-grow:2;-ms-flex-positive:2;flex-grow:2;background-color:transparent;color:var(--color-fg);}.baseStyle-b1d7nvbf::-webkit-outer-spin-button,.baseStyle-b1d7nvbf::-webkit-inner-spin-button{-webkit-appearance:none;margin:0;}.baseStyle-b1d7nvbf:focus{outline-style:none;box-shadow:none;border-color:transparent;}.baseStyle-b1d7nvbf::-webkit-input-placeholder{color:var(--color-fgMuted);opacity:1;}.baseStyle-b1d7nvbf::-moz-placeholder{color:var(--color-fgMuted);opacity:1;}.baseStyle-b1d7nvbf:-ms-input-placeholder{color:var(--color-fgMuted);opacity:1;}.baseStyle-b1d7nvbf::placeholder{color:var(--color-fgMuted);opacity:1;}.baseStyle-b1d7nvbf:-webkit-autofill{border-radius:var(--borderRadius-200);}
.defaultContainerPaddingStyle-dknhr24{padding:var(--space-2);}.defaultContainerPaddingStyle-dknhr24[data-compact='true']{padding:var(--space-1);}}
.s1ty2zvo{color:var(--color-fgPrimary);font-size:62px;}
.c1dk0jyb{max-width:var(--c1dk0jyb-0);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:relative;-webkit-transform:scale(var(--c1dk0jyb-1));-ms-transform:scale(var(--c1dk0jyb-1));transform:scale(var(--c1dk0jyb-1));}
.i1m4401q{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}
.s17j6s2u{width:var(--s17j6s2u-0);padding:0;margin:0;box-shadow:none;border:none;overflow:hidden;outline:none;color:var(--color-fgPrimary);font-family:CoinbaseSans;font-size:62 px;text-align:right;background-color:var(--color-bg);}.s17j6s2u::-webkit-input-placeholder{color:var(--color-fgPrimary);line-height:normal;opacity:1;}.s17j6s2u::-moz-placeholder{color:var(--color-fgPrimary);line-height:normal;opacity:1;}.s17j6s2u:-ms-input-placeholder{color:var(--color-fgPrimary);line-height:normal;opacity:1;}.s17j6s2u::placeholder{color:var(--color-fgPrimary);line-height:normal;opacity:1;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2xpYnMvd2FsbGV0LWNkcy1leHRlbnNpb24vY29tcG9uZW50cy9BbW91bnRJbnB1dC9EaXNhYmxlZEFtb3VudElucHV0LnRzeCJdLCJuYW1lcyI6WyIuczF0eTJ6dm8iLCIuYzFkazBqeWIiLCIuaTFtNDQwMXEiLCIuczE3ajZzMnUiXSwibWFwcGluZ3MiOiJBQWlENEJBO0FBS1ZDO0FBWUtDO0FBT0lDIiwiZmlsZSI6Ii93b3Jrc3BhY2VzL2xpYnMvd2FsbGV0LWNkcy1leHRlbnNpb24vY29tcG9uZW50cy9BbW91bnRJbnB1dC9EaXNhYmxlZEFtb3VudElucHV0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZU1lc3NhZ2VzLCB1c2VJbnRsIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdAbGluYXJpYS9yZWFjdCc7XG5pbXBvcnQgeyBjc3NWYWx1ZSB9IGZyb20gJ3dhbGxldC1jZHMtZXh0ZW5zaW9uL3V0aWwvY3NzL2Nzc1ZhbHVlJztcbmltcG9ydCB7IEhTdGFjaywgU3BhY2VyLCBWU3RhY2sgfSBmcm9tICdAY2JocS9jZHMtd2ViL2xheW91dCc7XG5cbmNvbnN0IENPTlRBSU5FUl9NQVhfV0lEVEggPSAyNDc7XG5jb25zdCBJTklUSUFMX0ZPTlRfU0laRSA9IDYyO1xuY29uc3QgSU5JVElBTF9JTlBVVF9XSURUSCA9IDQwO1xuXG5jb25zdCBtZXNzYWdlcyA9IGRlZmluZU1lc3NhZ2VzKHtcbiAgYW1vdW50OiB7XG4gICAgZGVmYXVsdE1lc3NhZ2U6ICdBbW91bnQnLFxuICAgIGRlc2NyaXB0aW9uOiAnTGFiZWwgZm9yIHRoZSB2YWx1ZSBpbiB0aGUgY3VycmVuY3kgaW5wdXQnLFxuICB9LFxufSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBEaXNhYmxlZEFtb3VudElucHV0KCkge1xuICBjb25zdCB7IGZvcm1hdE1lc3NhZ2UgfSA9IHVzZUludGwoKTtcbiAgY29uc3Qgc3ltYm9sID0gJyQnO1xuXG4gIHJldHVybiAoXG4gICAgPFZTdGFjayB0ZXN0SUQ9XCJkaXNhYmxlZC1hbW91bnQtaW5wdXRcIj5cbiAgICAgIDxIU3RhY2sganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxWU3RhY2sgd2lkdGg9XCIxMDAlXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICAgIDxIU3RhY2sgd2lkdGg9XCIxMDAlXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8U3BhY2VyIGhvcml6b250YWw9ezF9IC8+XG4gICAgICAgICAgICA8Q29udGFpbmVyIHNjYWxlPXsxfSBtYXhXaWR0aD17Q09OVEFJTkVSX01BWF9XSURUSH0+XG4gICAgICAgICAgICAgIDxJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8U3R5bGVkU3ltYm9sPntzeW1ib2x9PC9TdHlsZWRTeW1ib2w+XG4gICAgICAgICAgICAgICAgPFN0eWxlZElucHV0XG4gICAgICAgICAgICAgICAgICBrZXk9XCJpbnB1dFwiXG4gICAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cImN1cnJlbmN5LWlucHV0XCJcbiAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2Zvcm1hdE1lc3NhZ2UobWVzc2FnZXMuYW1vdW50KX1cbiAgICAgICAgICAgICAgICAgIHdpZHRoPXtJTklUSUFMX0lOUFVUX1dJRFRIfVxuICAgICAgICAgICAgICAgICAgbWluTGVuZ3RoPXsxfVxuICAgICAgICAgICAgICAgICAgaW5wdXRNb2RlPVwiZGVjaW1hbFwiXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIjBcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJcIlxuICAgICAgICAgICAgICAgICAgcmVhZE9ubHlcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0lucHV0Q29udGFpbmVyPlxuICAgICAgICAgICAgPC9Db250YWluZXI+XG4gICAgICAgICAgPC9IU3RhY2s+XG4gICAgICAgIDwvVlN0YWNrPlxuICAgICAgPC9IU3RhY2s+XG4gICAgPC9WU3RhY2s+XG4gICk7XG59XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTeW1ib2wgPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IHZhcigtLWNvbG9yLWZnUHJpbWFyeSk7XG4gIGZvbnQtc2l6ZTogJHtjc3NWYWx1ZShJTklUSUFMX0ZPTlRfU0laRSl9cHg7XG5gO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2PHtcbiAgc2NhbGU/OiBudW1iZXIgfCBzdHJpbmc7XG4gIG1heFdpZHRoPzogbnVtYmVyIHwgc3RyaW5nO1xufT5gXG4gIG1heC13aWR0aDogJHsocCkgPT4gY3NzVmFsdWUocC5tYXhXaWR0aCl9cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zZm9ybTogc2NhbGUoJHsocCkgPT4gY3NzVmFsdWUocC5zY2FsZSl9KTtcbmA7XG5cbmNvbnN0IElucHV0Q29udGFpbmVyID0gc3R5bGVkLmRpdjx7XG4gIHNoYWtlPzogYm9vbGVhbjtcbn0+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG5gO1xuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXQgPSBzdHlsZWQuaW5wdXRgXG4gIHdpZHRoOiAkeyhwKSA9PiBjc3NWYWx1ZShwLndpZHRoKX1weDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2hhZG93OiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1mZ1ByaW1hcnkpO1xuICBmb250LWZhbWlseTogQ29pbmJhc2VTYW5zO1xuICBmb250LXNpemU6ICR7Y3NzVmFsdWUoSU5JVElBTF9GT05UX1NJWkUpfXB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmcpO1xuXG4gICY6OnBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItZmdQcmltYXJ5KTtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbmA7XG4iXX0=*/
.o1ksljwo{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:var(--o1ksljwo-0);font-size:14px;text-align:left;padding-left:5px;}
.s15ol1l0{position:absolute;top:50%;left:16px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);cursor:pointer;border:1px solid var(--color-bgLine);border-radius:100%;background-color:var(--color-bg);}
/*# sourceMappingURL=data:application/json;base64,*/

/*# sourceMappingURL=523.css.map*/