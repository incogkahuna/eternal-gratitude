@layer cds{.circle-cat65m8{border-radius:100%;}
.square-s4x9tgq{border-radius:4px;}
.hexagon-h112niag{border-radius:0;}
.squircle-s8clfq8{border-radius:8px;}
.rectangle-ra2rof2{border-radius:0;}}
.vlzlpab{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;}.vlzlpab > div{position:relative;z-index:0;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:initial;-webkit-box-align:initial;-ms-flex-align:initial;align-items:initial;}.vlzlpab > div > div:not(:last-child){margin-top:-16px;margin-right:0;}
/*# sourceMappingURL=data:application/json;base64,*/
@layer cds{.tableCellStyle-t1l01hi5{padding:0;margin:0;vertical-align:middle;border:none;}}
@layer cds{.tableStyle-tcfnqih{display:table;width:100%;margin:0;padding:0;border-collapse:collapse;border:none;}.tableStyle-tcfnqih thead,.tableStyle-tcfnqih tbody,.tableStyle-tcfnqih tfoot{padding:0;margin:0;border:none;}
.tableFixedStyle-t10y7b8a{table-layout:fixed;}
.tableContainerStyle-tdwtctb{overflow:auto;width:100%;height:var(--table-height);max-height:var(--table-maxHeight);}.tableContainerStyle-tdwtctb table{background-color:var(--color-bg);color:var(--color-fg);min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;}
.tableContainerBorderStyle-t1c2n4w4{border:var(--borderWidth-100) solid var(--color-bgLine);border-radius:var(--borderRadius-200);}

.tableVariantGraph-t1wr3951 table > caption{border-bottom:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantGraph-t1wr3951 table > tfoot{border-top:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantGraph-t1wr3951 table > tr > td,.tableVariantGraph-t1wr3951 table > tbody > tr > td,.tableVariantGraph-t1wr3951 table > tbody > tr > th,.tableVariantGraph-t1wr3951 table > thead > .table-row,.tableVariantGraph-t1wr3951 table > tfoot > tr > td{border-bottom:var(--borderWidth-100) solid var(--color-bgLine);border-right:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantGraph-t1wr3951 table > tbody > tr > th,.tableVariantGraph-t1wr3951 table > thead > tr > th{box-shadow:inset 0px -1px 0px 0px var(--color-bgLine);border-right:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantGraph-t1wr3951 table > tbody > tr:last-child > th,.tableVariantGraph-t1wr3951 table > tbody > tr:last-child > td,.tableVariantGraph-t1wr3951 table > tfoot > tr:last-child > td{border-bottom:none;}.tableVariantGraph-t1wr3951 table > thead > tr > th:last-child,.tableVariantGraph-t1wr3951 table > tbody > tr > th:last-child,.tableVariantGraph-t1wr3951 table > tbody > tr > td:last-child,.tableVariantGraph-t1wr3951 table > thead > .table-row:last-child,.tableVariantGraph-t1wr3951 table > tfoot > tr > td:last-child{border-right:none;}
.tableVariantRuled-t2pqtmt table > caption{border-bottom:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantRuled-t2pqtmt table > tfoot{border-top:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantRuled-t2pqtmt table > tr > td,.tableVariantRuled-t2pqtmt table > tbody > tr > th,.tableVariantRuled-t2pqtmt table > tbody > tr > td,.tableVariantRuled-t2pqtmt table > tfoot > tr > td{border-bottom:var(--borderWidth-100) solid var(--color-bgLine);}.tableVariantRuled-t2pqtmt table > thead > tr > th{box-shadow:inset 0px -1px 0px 0px var(--color-bgLine);}.tableVariantRuled-t2pqtmt table > tbody > tr:last-child > th,.tableVariantRuled-t2pqtmt table > tbody > tr:last-child > td,.tableVariantRuled-t2pqtmt table > tfoot > tr:last-child > td{border:none;}}
@layer cds{.truncationStyle-t1x93mns{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0;}
.tableCellStyle-t1tm00n7{padding:0;margin:0;vertical-align:middle;border:none;}
.tableHeaderCellStyle-tuqbsed{color:var(--color-fgMuted);}
.tableFooterCellStyle-t1gwndzp{color:var(--color-fgMuted);}
.tableOverflowWidthStyle-t1l3yoo8{max-width:0;}}
@layer cds{.tableRowStyle-t1cncu43:nth-child(1n){background-color:var(--color-bg);padding:0;border:0;}.tableRowStyle-t1cncu43 > th{background-color:inherit;}
.tableRowHoverStyle-tg1utdg:nth-child(1n):focus,.tableRowHoverStyle-tg1utdg:nth-child(1n):hover{background-color:rgba(var(--gray5),0.35);}}
.s4pjp9p{background-color:rgb(var(--gray15));padding-top:0;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2xpYnMvd2FsbGV0LWNkcy13ZWIvY29tcG9uZW50cy9UeFByZXZpZXdGYWxsYmFjay9UeFByZXZpZXdGYWxsYmFjay50c3giXSwibmFtZXMiOlsiLnM0cGpwOXAiXSwibWFwcGluZ3MiOiJBQWlFY0EiLCJmaWxlIjoiL3dvcmtzcGFjZXMvbGlicy93YWxsZXQtY2RzLXdlYi9jb21wb25lbnRzL1R4UHJldmlld0ZhbGxiYWNrL1R4UHJldmlld0ZhbGxiYWNrLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAbGluYXJpYS9jb3JlJztcbmltcG9ydCB7IHVzZVR4UHJldmlld01lc3NhZ2VzIH0gZnJvbSAnY2Itd2FsbGV0LWRhdGEvaG9va3MvVHhQcmV2aWV3L3VzZVR4UHJldmlld01lc3NhZ2VzJztcbmltcG9ydCB7IFNjYW5uZXJTZXJ2aWNlIH0gZnJvbSAnY2Itd2FsbGV0LWRhdGEvc3RvcmVzL1R4U2Nhbm5lci9pbnRlcmZhY2VzL1NjYW5UeFJlc3VsdCc7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi9pY29ucy9JY29uJztcbmltcG9ydCB7IEJveCwgSFN0YWNrIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi9sYXlvdXQnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ0BjYmhxL2Nkcy13ZWIvb3ZlcmxheXMvdG9vbHRpcC9Ub29sdGlwJztcbmltcG9ydCB7IFRhYmxlLCBUYWJsZUJvZHksIFRhYmxlUm93IH0gZnJvbSAnQGNiaHEvY2RzLXdlYi90YWJsZXMnO1xuaW1wb3J0IHsgVGFibGVDZWxsRmFsbGJhY2sgfSBmcm9tICdAY2JocS9jZHMtd2ViL3RhYmxlcy9UYWJsZUNlbGxGYWxsYmFjayc7XG5pbXBvcnQgeyBUZXh0TGVnYWwgfSBmcm9tICdAY2JocS9jZHMtd2ViL3R5cG9ncmFwaHknO1xuXG50eXBlIFR4U2Nhbm5lckZhbGxiYWNrUHJvcHMgPSB7XG4gIG9wZXJhdGlvblNvdXJjZT86IFNjYW5uZXJTZXJ2aWNlO1xufTtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBsb2FkaW5nIGNvbXBvbmVudCBkaXNwbGF5ZWQgd2hlbiB0aGUgVHhTY2FubmVyIFVJIG9yIE1lc3NhZ2VTY2FubmVyIFVJIGlzIGxvYWRpbmcuIEl0IGRpc3BsYXlzIGEgY29udGV4dHVhbCBtZXNzYWdlXG4gKiBiYXNlZCBvbiB0aGUgZW50aXR5IGJlaW5nIHNjYW5uZWQuXG4gKlxuICogQHBhcmFtIHNjYW5uZXJFbnRpdHkg4oCTIHRoZSBlbnRpdHkgdGhhdCB3YXMgYmVpbmcgc2Nhbm5lZCB3aXRoIG91ciBpbnRlcm5hbCBzZXJ2aWNlICh0cmFuc2FjdGlvbiBvciBtZXNzYWdlKVxuICovXG5mdW5jdGlvbiBUeFNjYW5uZXJGYWxsYmFjayh7XG4gIG9wZXJhdGlvblNvdXJjZSA9IFNjYW5uZXJTZXJ2aWNlLlRYX1NDQU5ORVIsXG59OiBUeFNjYW5uZXJGYWxsYmFja1Byb3BzKSB7XG4gIGNvbnN0IHR4UHJldmlld01lc3NhZ2VzID0gdXNlVHhQcmV2aWV3TWVzc2FnZXMob3BlcmF0aW9uU291cmNlKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgZGFuZ2Vyb3VzbHlTZXRCYWNrZ3JvdW5kPVwicmdiKHZhcigtLWdyYXkxNSkpXCJcbiAgICAgIHBhZGRpbmdYPXszfVxuICAgICAgcGFkZGluZ1k9ezJ9XG4gICAgICB0ZXN0SUQ9XCJ0eC1zY2FubmVyLWZhbGxiYWNrXCJcbiAgICA+XG4gICAgICA8SFN0YWNrPlxuICAgICAgICA8VGV4dExlZ2FsIGFzPVwicFwiIGNvbG9yPVwiZmdNdXRlZFwiPlxuICAgICAgICAgIHt0eFByZXZpZXdNZXNzYWdlcy5mYWxsYmFja1RpdGxlfVxuICAgICAgICA8L1RleHRMZWdhbD5cbiAgICAgICAgPFRvb2x0aXAgY29udGVudD17dHhQcmV2aWV3TWVzc2FnZXMuYXNzZXRDaGFuZ2VUb29sdGlwQ29udGVudH0gcGxhY2VtZW50PVwiYm90dG9tXCI+XG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIHRlc3RJRD1cImRhcHAtdHJhbnNhY3Rpb24tc2FmZXR5LXRvb2x0aXAtaWNvblwiXG4gICAgICAgICAgICBuYW1lPVwiaW5mb1wiXG4gICAgICAgICAgICBzaXplPVwieHNcIlxuICAgICAgICAgICAgY29sb3I9XCJmZ011dGVkXCJcbiAgICAgICAgICAgIHBhZGRpbmdTdGFydD17MC41fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVG9vbHRpcD5cbiAgICAgIDwvSFN0YWNrPlxuICAgICAgPFRhYmxlPlxuICAgICAgICA8VGFibGVCb2R5PlxuICAgICAgICAgIDxUYWJsZVJvdyBjbGFzc05hbWU9e3N0eWxlfT5cbiAgICAgICAgICAgIDxUYWJsZUNlbGxGYWxsYmFja1xuICAgICAgICAgICAgICB0aXRsZVxuICAgICAgICAgICAgICBlbmQ9XCJwaWN0b2dyYW1cIlxuICAgICAgICAgICAgICBpbm5lclNwYWNpbmc9e3sgcGFkZGluZ1g6IDAsIHBhZGRpbmdUb3A6IDAgfSBhcyBjb25zdH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9UYWJsZVJvdz5cbiAgICAgICAgPC9UYWJsZUJvZHk+XG4gICAgICA8L1RhYmxlPlxuICAgIDwvQm94PlxuICApO1xufVxuXG5leHBvcnQgY29uc3QgVHJhbnNhY3Rpb25TY2FubmVyRmFsbGJhY2sgPSBtZW1vKFR4U2Nhbm5lckZhbGxiYWNrKTtcblxuY29uc3Qgc3R5bGUgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYih2YXIoLS1ncmF5MTUpKTtcbiAgcGFkZGluZy10b3A6IDA7XG5gO1xuIl19*/

/*# sourceMappingURL=1648.css.map*/