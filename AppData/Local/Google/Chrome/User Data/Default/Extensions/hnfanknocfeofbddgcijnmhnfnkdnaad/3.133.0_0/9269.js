try{!function(){var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="e516b574-48e9-4961-b845-daea753245ab",e._sentryDebugIdIdentifier="sentry-dbid-e516b574-48e9-4961-b845-daea753245ab")}()}catch(e){}!function(){try{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{}).SENTRY_RELEASE={id:"3.133.0-398e03"}}catch(e){}}(),(self.webpackChunkcb_wallet_extension=self.webpackChunkcb_wallet_extension||[]).push([[9269],{74996:(e,n,t)=>{t.d(n,{E:()=>a});var s=t(67612),o=t.n(s);function a(e,n){let t;try{t=o().address.fromBech32(e)}catch{return!1}return t.prefix===n.bech32&&0===t.version}},19269:(e,n,t)=>{t.d(n,{_i:()=>y,qO:()=>g,dP:()=>m,deriveLegacyAddressFromXpubKey:()=>d,deriveSegwitAddressFromXpubKey:()=>i});var s=t(67612),o=t.n(s);async function a(e){const{HDKey:n}=await Promise.resolve().then(t.bind(t,42114));return n.parseExtendedKey(e.xpubKey).derive(`${e.change?1:0}/${e.index}`).publicKey}var r=t(41655);async function i({blockchainSymbol:e,xpubKey:n,index:t,change:s,testnet:i}){const d=(0,r.N)(e,i),c=await a({xpubKey:n,index:t,change:s});return o().payments.p2wpkh({pubkey:c,network:d}).address}async function d({blockchainSymbol:e,xpubKey:n,index:t,change:s,testnet:i}){const d=(0,r.N)(e,i),c=await a({xpubKey:n,index:t,change:s});return o().payments.p2pkh({pubkey:c,network:d}).address}var c=t(68583),l=t(74996),u=t(68758),b=t(40705);class h{constructor(e){this.blockchainSymbol=e.blockchainSymbol}async isAddressValid(e){return(0,c.p)({blockchainSymbol:this.blockchainSymbol,address:e.address,testnet:e.testnet})}async signTransaction(e){return this.sign(e.privateKeys,e.coinSelection,e.testnet)}async submitSignedTransaction(e){const n=await(0,u.T)({endpoint:"/v1/submitSignedTransaction",blockchainSymbol:this.blockchainSymbol,body:{data:e.signedTxData.toString("hex"),testnet:e.testnet},options:{isTextResponse:!0}});if(!(0,b.Lo)(n.body)||0===n.body.length)throw new Error("unexpected response")}}var f=t(1048).Buffer;class y extends h{async signTransactionAsync(e,n,t,s){const{inputs:a,outputs:i}=t,d=(0,r.N)(this.blockchainSymbol,s),u={},b=new(o().TransactionBuilder)(d);for(const e of a){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:s});const t=(0,l.E)(n,d);u[n]=t;const o=4294967294;t?b.addInput(e.hash,e.index,o,e.script):b.addInput(e.hash,e.index,o)}for(const e of i){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:s}),b.addOutput(n,e.value.toNumber())}await(async()=>{for(let t=0;t<a.length;t++){const s=a[t],{publicKey:o,derivationPath:r}=e[s.address];if(!f.isBuffer(o))throw new Error(`public key for ${s.address} not found`);u[s.address]?await b.signAsync(t,o,r,n,void 0,void 0,s.value.toNumber()):await b.signAsync(t,o,r,n)}})();const h=b.build();return{data:h.toBuffer(),hash:f.from(h.getHash().reverse()).toString("hex")}}sign(e,n,t){const{inputs:s,outputs:a}=n,i={},d=(0,r.N)(this.blockchainSymbol,t),u=new(o().TransactionBuilder)(d);for(const e of s){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:t});const s=(0,l.E)(n,d);i[n]=s,s?u.addInput(e.hash,e.index,4294967293,e.script):u.addInput(e.hash,e.index,4294967293)}for(const e of a){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:t}),u.addOutput(n,e.value.toNumber())}s.forEach(((n,t)=>{const s=e[n.address];if(!f.isBuffer(s))throw new Error(`private key for ${n.address} not found`);const a=o().ECPair.fromPrivateKey(s,{network:d});i[n.address]?u.sign(t,a,void 0,void 0,n.value.toNumber()):u.sign(t,a)}));const b=u.build();return{data:b.toBuffer(),hash:f.from(b.getHash().reverse()).toString("hex")}}}var p=t(1048).Buffer;class g extends h{async signTransaction(e){return this.sign(e.privateKeys,e.coinSelection,e.testnet)}async signTransactionAsync(e,n,t,s){const{inputs:a,outputs:i}=t,d=(0,r.N)(this.blockchainSymbol,s),l=new(o().TransactionBuilder)(d);l.setVersion(1);for(const e of a){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:s}),l.addInput(e.hash,e.index)}for(const e of i){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:s}),l.addOutput(n,e.value.toNumber())}await(async()=>{for(let t=0;t<a.length;t++){const s=a[t],{publicKey:o,derivationPath:r}=e[s.address];if(!p.isBuffer(o))throw new Error(`public key for ${s.address} not found`);await l.signAsync(t,o,r,n)}})();const u=l.build();return{data:u.toBuffer(),hash:p.from(u.getHash().reverse()).toString("hex")}}sign(e,n,t){const{inputs:s,outputs:a}=n,i=(0,r.N)(this.blockchainSymbol,t),d=new(o().TransactionBuilder)(i);d.setVersion(1);for(const e of s){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:t}),d.addInput(e.hash,e.index)}for(const e of a){const{address:n}=e;(0,c.j)({blockchainSymbol:this.blockchainSymbol,address:n,testnet:t}),d.addOutput(n,e.value.toNumber())}s.forEach(((n,t)=>{const s=e[n.address];if(!p.isBuffer(s))throw new Error(`private key for ${n.address} not found`);const a=o().ECPair.fromPrivateKey(s,{network:i});d.sign(t,a)}));const l=d.build();return{data:l.toBuffer(),hash:p.from(l.getHash().reverse()).toString("hex")}}}t(27175),t(32212),t(80043),t(48985),t(51847),t(23062);class m extends y{}}}]);
//# sourceMappingURL=9269.js.map