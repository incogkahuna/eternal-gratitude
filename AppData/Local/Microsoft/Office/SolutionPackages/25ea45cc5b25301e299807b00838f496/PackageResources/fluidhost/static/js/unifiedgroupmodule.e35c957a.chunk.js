"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[5828],{53030:(e,r,t)=>{t.r(r),t.d(r,{UnifiedGroupModule:()=>ae});var s=t(75992);class o extends s.r{loggingData(){return{numGroupsChecked:String(this.groupIds.length)}}constructor(e){super(o.actionType),this.groupIds=e}}o.actionType="PLW_CHECK_CURRENT_USER_TO_GROUPS_MEMBERSHIPS";var a=t(6775),i=t(27921),n=t(32512);class c extends n.v{constructor(e,r,t,s){super(c.actionType,r,t,s),this.requestGroupIds=e}}c.actionType="PLW_CHECK_CURRENT_USER_TO_GROUPS_MEMBERSHIPS_FAILED";var g=t(58245),d=t(47816),p=t(85224),h=t(88786),l=t(33701),u=t(4597),T=t(12756),G=t(9300),I=t(77292),v=t(95799),w=t(51873),y=t(24590),P=t(86697),k=t(3519),b=t(8165),m=t(31364),A=t(39894);class S extends n.v{constructor(e,r,t){super(S.actionType,e,r,t)}}S.actionType="PLW_GET_JOINEDGROUPS_FAILED";var $=t(45498);class C extends n.v{constructor(e,r,t){super(C.actionType,e,r,t)}}C.actionType="PLW_RESOLVEGROUPSTOPLANS_FAILED";var L=t(77992),f=t(32185),F=t(7811),V=t(64805),N=t(65818),E=t(80708),x=t(11910),j=t(18113),D=t(86178),M=t.n(D),U=t(74844),R=t(37084),W=t.n(R),_=t(55491),B=t.n(_),q=t(34677),O=t.n(q),J=t(54320),K=t.n(J),H=t(93672),Q=t.n(H),z=t(36475),Y=t.n(z),X=t(76209),Z=t(98502),ee=t(91246),re=t(9962),te=t(38752),se=t(54439),oe=t(82841);class ae extends V.J{get name(){return"UnifiedGroupModule"}async checkCurrentUserToGroupsMembershipsAsync(e,r,t){const s=null==r?j.Q.Priority5:r;this.loggers.traceLogger.logTrace(507896902,U.k.Verbose,`User to group membership check [isMSIT=${t??!1}]`),!0!==t&&this.dispatcher.dispatchAction(new o(e));try{const r=await this.webApiProviders.graph(),o=await r.checkCurrentUserToGroupsMembershipsAsync({groupIds:e},s);return this.loggers.traceLogger.logTrace(507896901,U.k.Verbose,`User to group membership check - Success [isMSIT=${t??!1}]`),!0===t?this.dispatcher.dispatchAction(new a.e(e,o)):this.dispatcher.dispatchAction(new i.M(e,o)),o}catch(n){const r=n;return this.loggers.traceLogger.logTrace(507896900,U.k.Warning,`User to group membership check - Fail [isMSIT=${t??!1}] ${(0,oe.s8)(r)}`),!0!==t&&this.dispatcher.dispatchAction(new c(e,r.response,r.response?.statusText??"",r.error?.message??"")),Promise.reject(n)}}async fetchGroupPhotoAsync(e,r){this.loggers.traceLogger.logTrace(507896899,U.k.Verbose,`Fetch Group Photo [GroupId=${e}]`);const t=e=>this.stores.containerStore.getContainerPhotoById(e.groupId),s={};try{const o=await this.webApiProviders.graph(),a=await o.getGroupPhoto({groupId:e},t,r);return null!=a&&""!==a?(s[e]=a,this.loggers.traceLogger.logTrace(507896898,U.k.Verbose,`Fetch Group Photo - Success [GroupId=${e}]`),s):(this.loggers.traceLogger.logTrace(507896897,U.k.Warning,`Fetch Group Photo - Fail [GroupId=${e}]`),Promise.reject({groupId:e,error:"No image was returned for user thumbnail"}))}catch(o){const r=o;return this.loggers.traceLogger.logTrace(507896896,U.k.Warning,`Fetch Group Photo - Fail [GroupId=${e}] ${(0,oe.s8)(r)}`),Promise.reject({groupId:e,error:r})}}fetchPhotosForGroupSet(e,r){this.loggers.traceLogger.logTrace(507896867,U.k.Verbose,`Fetch Photos For GroupSet [GroupIds=${e.join(",")}]`);const t=this.stores.appContextStore.getApiBatchLimits().GetUserPhotosBatchedAsync||10;return new Promise((s,o)=>{if(K()(e))return s();B()(W()(e,t),t=>{const o=[];B()(t,e=>{null==this.stores.containerStore.getContainerPhotoById(e)&&o.push(this.fetchGroupPhotoAsync(e,r))}),K()(o)?s():Promise.allSettled(o).then(r=>{let t={};r.forEach(e=>{if("fulfilled"===e.status&&null!=e.value)t=O()(t,e.value);else if("rejected"===e.status){const r=e.reason.groupId;t[r]=""}}),this.dispatcher.dispatchAction(new g.W(t)),this.loggers.traceLogger.logTrace(507896866,U.k.Verbose,`Fetch Photos For GroupSet - Success [GroupIds=${e.join(",")}]`),s()})})})}async getConversationThreadAsync(e,r,t,s){this.loggers.traceLogger.logTrace(507896865,U.k.Verbose,`Get Coversation Thread [GroupId=${e}][ThreadId=${r}]`);const o=this.getCurrentViewIds();se.j.beginTransaction(this.dispatcher,{name:"fetchConversationThreadInGroup",transactionId:r},this.loggers.logHandler),this.dispatcher.dispatchAction(new d.l(e,r,M()()));try{const a=await this.webApiProviders.graph(),i=await this.webApiProviders.graphService(),n=te.B.clientSettings.Flights.EnableDirectGraphConversationCalls?await i.getGroupConversationThreadAsync({groupId:e,threadId:r},t,o,s):await a.getConversationThreadAsync({groupId:e,threadId:r},t,o,s);return se.j.completeTransaction(this.dispatcher,{transactionId:r,action:new p.f(e,r,n)}),this.loggers.traceLogger.logTrace(507896864,U.k.Verbose,`Get Coversation Thread - Success [GroupId=${e}][ThreadId=${r}]`),n}catch(a){const t=a;return this.loggers.traceLogger.logTrace(507896863,U.k.Warning,`Get Coversation Thread - Fail [GroupId=${e}][ThreadId=${r}] ${(0,oe.s8)(t)}`),Promise.reject(t)}}async getConversationThreadPostAsync(e,r,t,s,o){this.loggers.traceLogger.logTrace(507060311,U.k.Verbose,"Reload Coversation Thread post");const a=this.getCurrentViewIds();try{const[i,n]=await Promise.all([this.webApiProviders.graph(),this.webApiProviders.graphService()]),c=te.B.clientSettings.Flights.EnableDirectGraphConversationCalls?await n.getGroupConversationThreadPostAsync({groupId:e,threadId:r,postId:t},s,a,o):await i.getConversationThreadPostAsync({groupId:e,threadId:r,postId:t},s,a,o);return this.dispatcher.dispatchAction(new h.D(e,r,t,c)),this.loggers.traceLogger.logTrace(507060310,U.k.Verbose,`Get Coversation Thread post - Success [GroupId=${e}][ThreadId=${r}][postId=${t}]`),c}catch(i){const s=i;return this.loggers.traceLogger.logTrace(507060309,U.k.Verbose,`Get Coversation Thread post - Fail [GroupId=${e}][ThreadId=${r}] [postId=${t}]\n            ${(0,oe.s8)(s)}`),Promise.reject(s)}}async warmUpGroupMailbox(e,r){this.loggers.traceLogger.logTrace(507896862,U.k.Verbose,`Warm Up Group Mailbox [GroupId=${e}]`),this.dispatcher.dispatchAction(new d.l(e,r,M()()));try{const t=await this.webApiProviders.graph(),s=await this.webApiProviders.graphService();te.B.clientSettings.Flights.EnableDirectGraphConversationCalls?await s.getGroupConversationThreadAsync({groupId:e,threadId:r}):await t.getConversationThreadAsync({groupId:e,threadId:r})}catch(t){}}async validateNamesBeforeCreateRecursive(e,r,t,s){this.loggers.traceLogger.logTrace(507896861,U.k.Verbose,`Validate Group Name [GroupId=${e.id}]`);const o=this.stores.tenantStore.getCurrentTenantGroupSettings();let a=o?o.DisplayNamePrefix:"",i=o?o.DisplayNameSuffix:"",n=o?o.MailNicknamePrefix:"",c=o?o.MailNicknameSuffix:"";if(0===t){t=3,s=3,(e=e.setProperty("mailNickname",X.A.generateNewMailNickname(r,0,n,c))).mailNickname||(e=e.setProperty("mailNickname",X.A.generateNewMailNickname(r,t,n,c)));let o=r;Q()(o,a)||(o=a+o),Y()(o,i)||(o+=i),e=e.setProperty("displayName",o)}else s>0?s--:(s=3,t++);try{const o=await this.webApiProviders.taskService(),g=await o.validateGroupNamesAsync({unifiedGroup:e,isCreation:!0});if(g.errorCode===F.Lg.OK)return this.loggers.traceLogger.logTrace(507896860,U.k.Verbose,`Validate Group Name - Success [GroupId=${e.id}]`),e;if(g.errorCode===F.Lg.MissingPrefixSuffix){a=g.displayNamePrefix||"",i=g.displayNameSuffix||"",n=g.mailNicknamePrefix||"",c=g.mailNicknameSuffix||"",this.dispatcher.dispatchAction(new l._(a,i,n,c));let o=r;return Q()(o,a)||(o=a+o),Y()(o,i)||(o+=i),e=(e=e.setProperty("displayName",o)).setProperty("mailNickname",X.A.generateNewMailNickname(r,t,n,c)),this.validateNamesBeforeCreateRecursive(e,r,t,s)}return g.errorCode===F.Lg.MailNicknameNotOK?(e=e.setProperty("mailNickname",X.A.generateNewMailNickname(e.displayName,t,n,c)),this.validateNamesBeforeCreateRecursive(e,r,t,s)):(this.loggers.traceLogger.logTrace(507896859,U.k.Warning,`Validate Group Name - Fail [GroupId=${e.id}][ErrorCode=${g.errorCode}]`),Promise.reject(g.errorCode))}catch(g){return this.loggers.traceLogger.logTrace(507896858,U.k.Verbose,`Validate Group Name - Success [GroupId=${e.id}]`),e}}async createGroup(e,r){this.loggers.traceLogger.logTrace(507896857,U.k.Verbose,`Create Group [GroupId=${e.id}]`),this.dispatcher.dispatchAction(new u.K(e));try{const t=await this.webApiProviders.taskService(),s=await t.createGroupAsync({unifiedGroupInfo:e},r);return this.dispatcher.dispatchAction(new T.x(s,e.id)),this.loggers.traceLogger.logTrace(507896856,U.k.Verbose,`Create Group - Success [GroupId=${e.id}]`),s.setProperty("autoSubscribeNewMembers",e.autoSubscribeNewMembers),s}catch(t){const r=t;return this.dispatcher.dispatchAction(new G.b(e.id,r.response,r.response?.statusText??"",r.error?.message??"")),this.loggers.traceLogger.logTrace(507896855,U.k.Warning,`Create Group - Fail [GroupId=${e.id}] ${(0,oe.s8)(r)}`),Promise.reject(r)}}async updateUnifiedGroup(e,r){this.loggers.traceLogger.logTrace(507896854,U.k.Verbose,`Update UnifiedGroup [GroupId=${e.id}]`);const t=ee.o.generate(),s=e.getDiff(r);if(K()(s))return Promise.resolve(r);this.dispatcher.dispatchAction(new I.v(r,t));try{const s=await this.webApiProviders.taskService(),o=await s.updateUnifiedGroupAsync({originalGroup:e,updatedGroup:r});return this.dispatcher.dispatchAction(new v.U(o,t)),this.loggers.traceLogger.logTrace(507896853,U.k.Verbose,`Update UnifiedGroup - Success [GroupId=${e.id}]`),o}catch(o){const r=o;return this.dispatcher.dispatchAction(new w.w(e,t,r.response,r.response?.statusText??"",r.error?.message??"")),this.loggers.traceLogger.logTrace(507896852,U.k.Warning,`Update UnifiedGroup - Fail [GroupId=${e.id}] ${(0,oe.s8)(r)}`),Promise.reject(r)}}async createGroupConversationThread(e,r,t,s,o){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.loggers.traceLogger.logTrace(507896851,U.k.Verbose,`Create Group Coversation Thread [GroupId=${e}][ThreadId=${r}][postId=${t.id}][taskId=${s.id}]`);const i=ee.o.generate(),n=s.setProperty("conversationThreadId",r);this.dispatcher.dispatchAction(new y.B(n,e,r,t,i,a));try{const n=await this.webApiProviders.taskService(),c=await this.webApiProviders.graphService(),g=te.B.clientSettings.Flights.EnableDirectGraphConversationCalls?await c.createGroupConversationThreadAsync({groupId:e,newPost:t,threadSubject:o}):await n.createGroupConversationThreadAsync({groupId:e,newPost:t,threadSubject:o}),d=s.setProperty("conversationThreadId",g.conversationThreadId),p=s.getDiff(d),h=e=>{const r=this.stores.taskStore.getTaskWithoutPendingUpdates(e.originalTaskEntitySet.id);if(null==r)throw Z.g.generateAjaxClientError(null,new re.m("originalStoreTask","taskStore"));const t=r.applyDiffs(p);return{originalTaskEntitySet:E.F.builder.withTask(r).build(),updatedTaskEntitySet:E.F.builder.withTask(t).build()}},l=await n.updateTaskAsync({originalTaskEntitySet:E.F.builder.withTask(s).build(),updatedTaskEntitySet:E.F.builder.withTask(d).build()},h);return this.dispatcher.dispatchAction(new P.E(l.task,e,r,g.conversationThreadId,t,g,i,a)),this.loggers.traceLogger.logTrace(507896850,U.k.Verbose,`Create Group Coversation Thread - Success [GroupId=${e}][ThreadId=${r}][postId=${t.id}][taskId=${s.id}]`),g}catch(c){const o=c;return this.dispatcher.dispatchAction(new k.M(s,e,r,t,i,o.response,o.response?.statusText??"",o.error?.message??"",a)),this.loggers.traceLogger.logTrace(507896849,U.k.Warning,`Create Group Coversation Thread - Fail [GroupId=${e}][ThreadId=${r}][postId=${t.id}][taskId=${s.id}] ${(0,oe.s8)(o)}`),Promise.reject(o)}}async postReplyInGroupConversationThread(e,r,t){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4?arguments[4]:void 0;this.loggers.traceLogger.logTrace(507896848,U.k.Verbose,`Post Reply In Group Coversation Thread [GroupId=${e}][ThreadId=${r}][postId=${t.id}]`),this.dispatcher.dispatchAction(new b.q(e,r,t,s));try{const a=await this.webApiProviders.taskService(),i=await this.webApiProviders.graphService(),n=t.toGraphSerializable();n.createdDateTime=M()().toDate().toISOString(),te.B.clientSettings.Flights.EnableDirectGraphConversationCalls?await i.postReplyInGroupConversationThreadAsync({groupId:e,threadId:r,newPost:t},o):await a.postReplyInGroupConversationThreadAsync({groupId:e,threadId:r,newPost:t},o);const c=x.L.builder.fromGraphPostResource(n,r).withLocallyUniqueId().build();return this.dispatcher.dispatchAction(new m.z(e,c.conversationThreadId,t,c,s)),this.loggers.traceLogger.logTrace(507896847,U.k.Verbose,`Post Reply In Group Coversation Thread - Success [GroupId=${e}][ThreadId=${r}][postId=${t.id}]`),c}catch(a){const s=a;return this.loggers.traceLogger.logTrace(507896846,U.k.Warning,`Post Reply In Group Coversation Thread - Fail [GroupId=${e}][ThreadId=${r}][postId=${t.id}] ${(0,oe.s8)(s)}`),Promise.reject(s)}}async joinGroup(e,r){this.loggers.traceLogger.logTrace(507896845,U.k.Verbose,`Join Group - Success [GroupId=${e}]`);try{const t=await this.webApiProviders.taskService();await t.joinGroupAsync({groupId:e},r),this.dispatcher.dispatchAction(new f.w(e,N.K.Group)),this.loggers.traceLogger.logTrace(507896844,U.k.Verbose,`Join Group - Success [GroupId=${e}]`)}catch(t){const r=t;return this.loggers.traceLogger.logTrace(507896843,U.k.Warning,`Join Group - Fail [GroupId=${e}] ${(0,oe.s8)(r)}`),Promise.reject(r)}}async leaveGroup(e,r){this.loggers.traceLogger.logTrace(507896842,U.k.Verbose,`Leave Group [containerId=${e}][containerType=${N.K.Group}]`);try{const t=await this.webApiProviders.taskService();await t.leaveGroupAsync({groupId:e},r),this.loggers.traceLogger.logTrace(507896841,U.k.Verbose,`Leave Group - Success [containerId=${e}][containerType=${N.K.Group}]`),this.dispatcher.dispatchAction(new L.v(e,N.K.Group))}catch(t){const r=t;return this.loggers.traceLogger.logTrace(507896840,U.k.Warning,`Leave Group - Fail [containerId=${e}][containerType=${N.K.Group}] ${(0,oe.s8)(r)}`),Promise.reject(r)}}async getJoinedGroups(e){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2?arguments[2]:void 0;this.loggers.traceLogger.logTrace(507896839,U.k.Verbose,"Get Joined Group");try{const s=await this.webApiProviders.taskService(),o=await s.getJoinedGroupsAsync({skipToken:e},t);return this.dispatcher.dispatchAction(new A.F(o.data,r)),this.loggers.traceLogger.logTrace(507896838,U.k.Verbose,"Get Joined Group - Success"),o}catch(s){const e=s;return this.dispatcher.dispatchAction(new S(e.response,e.response?.statusText??"",e.error?.message??"")),this.loggers.traceLogger.logTrace(507896837,U.k.Warning,`Get Joined Group - Fail ${(0,oe.s8)(e)}`),Promise.reject(e)}}async validateGroupNamesAsync(e,r,t){this.loggers.traceLogger.logTrace(507896836,U.k.Verbose,`Validate Group Name [GroupId=${e.id}]`);const s=t??j.Q.Priority5;try{const t=await this.webApiProviders.taskService(),o=await t.validateGroupNamesAsync({unifiedGroup:e,isCreation:r},s);return this.loggers.traceLogger.logTrace(507896835,U.k.Verbose,`Validate Group Name - Success [GroupId=${e.id}]`),o}catch(o){const r=o;return this.loggers.traceLogger.logTrace(507896834,U.k.Warning,`Validate Group Name - Fail [GroupId=${e.id}] ${(0,oe.s8)(r)}`),Promise.reject(r)}}async resolveGroupsToPlansBatchedAsync(e){this.loggers.traceLogger.logTrace(507896833,U.k.Verbose,`Resolve Groups to Plans [GroupIds=${e.join(", ")}]`);try{const r=await this.webApiProviders.taskService(),t=await r.resolveGroupsToPlansBatchedAsync({groupIds:e});return this.dispatcher.dispatchAction(new $.T(t)),this.loggers.traceLogger.logTrace(507896832,U.k.Verbose,`Resolve Groups to Plans - Success [GroupIds=${e.join(",")}]`),t}catch(r){const t=r;return this.dispatcher.dispatchAction(new C(t.response,t.response?.statusText??"",t.error?.message??"")),this.loggers.traceLogger.logTrace(507896803,U.k.Warning,`Resolve Groups to Plans - Fail [GroupIds=${e.join(",")}] ${(0,oe.s8)(t)}`),Promise.reject(t)}}async fetchPlansForGroup(e){this.loggers.traceLogger.logTrace(507896802,U.k.Verbose,`Fetch Plans For Group [GroupId=${e}]`);const r=e+"_fetchPlansForGroup";se.j.beginTransaction(this.dispatcher,{name:"fetchPlansForGroup",transactionId:r},this.loggers.logHandler);try{const t=await this.webApiProviders.taskService(),s=await t.resolveGroupsToPlansBatchedAsync({groupIds:[e]});return se.j.completeTransaction(this.dispatcher,{transactionId:r,action:new $.T(s)}),this.loggers.traceLogger.logTrace(507896801,U.k.Verbose,`Fetch Plans For Group - Success [GroupId=${e}]`),s}catch(t){const s=t;return se.j.completeTransactionWithError(this.dispatcher,{transactionId:r,errorMessage:"",action:new C(s.response,s.response?.statusText??"",s.error?.message??"")}),this.loggers.traceLogger.logTrace(507896800,U.k.Warning,`Fetch Plans For Group - Fail [GroupId=${e}] ${(0,oe.s8)(s)}`),Promise.reject(s)}}}},54439:(e,r,t)=>{t.d(r,{j:()=>g});var s=t(29274),o=t(74427),a=t(57860),i=t(47204),n=t(74568),c=t(79947);class g{static beginTransaction(e,r,t){let{transactionId:o,name:a,logQos:i,action:c,additionalData:d}=r;if(!0===i){const e=new n.W({name:"Tx:"+a},t);g.qosEventsInFlight[o]=e}e.batchDispatchActions(new s.S(a,o,d),c)}static cancelTransaction(e,r){let{transactionId:t,action:s,additionalData:a}=r;const i=g.qosEventsInFlight[t];i&&(i.end({resultType:c.f.ExpectedFailure,extraData:a}),delete g.qosEventsInFlight[t]),e.batchDispatchActions(s,new o.D(t,a))}static completeTransaction(e,r){let{transactionId:t,action:s,additionalData:o}=r;const i=g.qosEventsInFlight[t];i&&(i.end({resultType:c.f.Success,extraData:o}),delete g.qosEventsInFlight[t]),e.batchDispatchActions(s,new a.M(t,o))}static completeTransactionWithBatch(e,r){let{transactionId:t,actions:s,additionalData:o}=r;const i=g.qosEventsInFlight[t];i&&(i.end({resultType:c.f.Success,extraData:o}),delete g.qosEventsInFlight[t]),e.batchDispatchActions(...s,new a.M(t,o))}static completeTransactionWithError(e,r){let{transactionId:t,errorMessage:s,action:o,additionalData:a}=r;const n=g.qosEventsInFlight[t];n&&(n.end({resultType:c.f.Failure,error:s,extraData:a}),delete g.qosEventsInFlight[t]),e.batchDispatchActions(o,new i.Y(t,s,a))}}g.qosEventsInFlight={}},64805:(e,r,t)=>{t.d(r,{J:()=>o});class s{get clientSettings(){return this.clientSettingsProvider()}constructor(e,r,t){this.dispatcher=e,this.clientSettingsProvider=r,this.loggers=t}}class o extends s{getCurrentViewIds(){const e=this.stores.appContextStore.getCurrentViewId();return e?[e]:void 0}constructor(e,r,t,s,o){super(e,s,o),this.webApiProviders=r,this.stores=t}}}}]);
//# sourceMappingURL=unifiedgroupmodule.e35c957a.chunk.js.map