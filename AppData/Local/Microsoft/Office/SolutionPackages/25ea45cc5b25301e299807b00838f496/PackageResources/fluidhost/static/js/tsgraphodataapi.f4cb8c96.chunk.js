"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[40513],{6189:(e,t,r)=>{r.d(t,{y:()=>h});var n=r(98990),a=r.n(n),s=r(84048),i=r.n(s),o=r(37535),l=r(33411),u=r.n(l),c=r(50204),d=r(44430),g=r(91246);class p{build(){return new h(this)}fromUnifiedGroupDetailsResource(e){const t=u()(e.Owners,e=>c.K.builder.fromUserResource(e).build()),r='"value":"';let n;if(null!=e.OneDriveUrl){const t=e.OneDriveUrl.indexOf(r);n=0===t?e.OneDriveUrl:e.OneDriveUrl.substring(t+9,e.OneDriveUrl.length-2)}return this.withPropertyBag({creationOptions:e.CreationOptions,currentUserRelationToGroup:e.CurrentUserRelationToGroup,endpoints:e.Endpoints,id:e.Id,owners:t,oneDriveUrl:n})}withPropertyBag(e){return this.currentUserRelationToGroup=e.currentUserRelationToGroup,this.creationOptions=e.creationOptions||[],this.owners=e.owners||[],this.endpoints=e.endpoints||[],this.id=e.id,this.oneDriveUrl=e.oneDriveUrl||null,this}withUserRelationToGroup(e){return this.currentUserRelationToGroup=e,this}withLocallyUniqueId(){return this.id=g.o.generate(),this}constructor(){this.currentUserRelationToGroup=d.N.NonMember,this.id=""}}var m=r(33268);class h{static get builder(){return new p}toWebSerializable(){const e=this.owners.map(e=>e.toWebSerializable());return{CreationOptions:this.creationOptions,CurrentUserRelationToGroup:this.currentUserRelationToGroup,Endpoints:this.endpoints,Id:this.id,Owners:e,OneDriveUrl:this.oneDriveUrl}}isFullyProvisioned(){return this.isSharePointProvisioned()}isSharePointProvisioned(){return!!this.oneDriveUrl}isYammerGroup(){return i()(this.creationOptions,"YammerProvisioning")}getSharepointDomainUrl(){const e=this.oneDriveUrl;return e?"https://"+m.wS.extractHostname(e):null}getWorkloadUrl(e){switch(o.P[e]){case o.P.Yammer:if(this.isYammerGroup()){const e=a()(this.endpoints,e=>"Yammer"===e.ServiceName);return e?.ServiceEndpointUri??""}return"";case o.P.Documents:return this.oneDriveUrl;case o.P.Calendar:case o.P.Conversations:case o.P.Notebook:case o.P.People:default:return null}}constructor(e){this.creationOptions=e.creationOptions,this.currentUserRelationToGroup=e.currentUserRelationToGroup,this.endpoints=e.endpoints,this.id=e.id,this.owners=e.owners,this.oneDriveUrl=e.oneDriveUrl}}},8403:(e,t,r)=>{r.d(t,{f:()=>T});var n=r(55491),a=r.n(n),s=r(42410),i=r(72761);class o{static fromResource(e){return new o(e.contextScenarioId,e.externalContextId,e.externalObjectId,e.ownerAppId)}toGraphSerializable(){return{contextScenarioId:this.contextScenarioId,externalContextId:this.externalContextId,externalObjectId:this.externalObjectId,ownerAppId:this.ownerAppId}}constructor(e,t,r,n){this.externalObjectId=r,this.externalContextId=t,this.contextScenarioId=e,this.ownerAppId=n}}class l{toGraphSerializable(){const e={};return this.external&&(e.external=this.external.toGraphSerializable()),e}constructor(e){null!=e.external&&(this.external=o.fromResource(e.external))}}var u=r(41740),c=r.n(u),d=r(91246);class g{build(){return new T(this)}newFromDifferentialUpdate(e){if(e.entityType!==i.I.Bucket)throw new Error("ArgumentException: invalid entity");const t=T.builder.withPropertyBag({id:e.id,itemVersion:e.itemVersion,planId:"",title:""}).build(),r=e.getCreateDiffData(),n=t.applyDiffs(r);return this.forClone(n)}forClone(e){return this.withPropertyBag({id:e.id,itemVersion:e.itemVersion,title:e.title,planId:e.planId,orderHint:e.orderHint,creationSource:c()(e.creationSource)??new l({})})}fromWebResource(e){return this.withPropertyBag({id:e.Id,itemVersion:null!=e.ItemVersion?e.ItemVersion.toString():void 0,orderHint:e.OrderHint,planId:e.PlanId,title:e.Title,creationSource:e.creationSource?new l(e.creationSource):void 0})}fromGraphResource(e){return this.withPropertyBag({itemVersion:e["@odata.etag"],title:e.name,planId:e.planId||"",orderHint:e.orderHint,id:e.id,creationSource:e.creationSource?new l(e.creationSource):void 0})}withPropertyBag(e){return this.id=e.id,this.itemVersion=e.itemVersion||this.itemVersion,this.orderHint=e.orderHint||this.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource||this.creationSource,this}withLocallyUniqueId(){return this.id=d.o.generate(),this}getDiffDataFromWebResource(e,t){const r=new s.F;r.addMapping("Title","title"),r.addMapping("OrderHint","orderHint"),r.addMapping("PlanId","planId"),r.addMapping("creationSource","creationSource");const n={};return a()(e.Changes,e=>{const t=e.FieldName;switch(t){case"OrderHint":case"PlanId":case"Title":const a=r.getMappedClientKey(t);n[a]=r.translateValue(t,a,e.Value)}}),n}getDiffDataFromGraphResource(e,t){const r=new s.F;return r.addMapping("name","title"),r.addMapping("orderHint","orderHint"),r.addMapping("planId","planId"),r.addMapping("creationSource","creationSource"),r.translate(e)}withValidData(){return this.id=d.o.generate(),this.itemVersion="1",this.title="Test bucket",this.planId=d.o.generate(),this.orderHint=" !",this}constructor(){this.id=d.o.generate(),this.title="",this.planId=d.o.generate(),this.itemVersion="",this.orderHint=" !",this.creationSource=new l({})}}var p=r(88908),m=r(17002),h=r.n(m),y=r(54320),f=r.n(y),b=r(36777),k=r.n(b),C=r(679);class T extends p.W{static get builder(){return new g}get entityType(){return i.I.Bucket}toWebSerializable(){return{Id:this.id,ItemVersion:null!=this.itemVersion?parseInt(this.itemVersion,10):null,OrderHint:this.orderHint,PlanId:this.planId,Title:this.title,creationSource:this.creationSource.toGraphSerializable()}}toGraphSerializable(){const e=this.creationSource.toGraphSerializable();return{id:this.id,"@odata.etag":this.itemVersion,orderHint:this.orderHint,planId:this.planId,name:this.title,creationSource:f()(e)?void 0:e}}setProperty(e,t){if("id"===e||"itemVersion"===e||"planId"===e||"creationSource"===e)throw new Error("ReadOnlyException: "+e);const r=this.getClone();return r[e]=t,r}getDiff(e){return C.B.getDiff(this,e,C.B.getDiffMomentCustomizer)}applyDiffs(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(!h()(t,e=>null!=e))throw new Error("ArgumentException: diffs - Diffs array contains null elements");return t.length>0?k()(T.builder.build(),this,...t,C.B.applyDiffMomentCustomizer):this}applyDifferentialUpdate(e){if(e.id!==this.id)throw new Error("ArgumentException: update.id must match this.id");const t=e.getUpdateDiffData(this);return this.applyDiffs(t)}getClone(){return this.getCloneBuilder().build()}getCloneBuilder(){return T.builder.forClone(this)}constructor(e){super(e.id,e.itemVersion),this.orderHint=e.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource}}T.TitleMaxLength=256},8838:(e,t,r)=>{r.r(t),r.d(t,{TaskServiceGraphOdataApi:()=>fe});var n,a=r(95783),s=r(45078),i=r(38752),o=r(26796),l=r(65818),u=r(94283),c=r(5312),d=r(55337),g=r(8403),p=r(33287),m=r(56434),h=r.n(m),y=r(72761),f=r(88908);!function(e){e[e.PlexDiffSync=0]="PlexDiffSync",e[e.GraphDeltaSync=1]="GraphDeltaSync"}(n||(n={}));var b=r(53443),k=r(45277);class C{build(){return new U(this)}fromWebResource(e){return this.withPropertyBag({id:e.ItemId,itemVersion:e.ItemVersion?e.ItemVersion.toString():"",entityType:e.ItemType,updateType:e.Operation,change:e,strategy:n.PlexDiffSync})}fromGraphResource(e){const t=this.parseGraphDiffMetadata(e);return this.withPropertyBag({id:e.id,itemVersion:t.updateType===b.U.Delete?"":e["@odata.etag"]??"",entityType:t.entityType,change:e,updateType:t.updateType,strategy:n.GraphDeltaSync})}withPropertyBag(e){return this.id=e.id,this.version=e.itemVersion,this.entityType=e.entityType,this.updateType=e.updateType,this.change=e.change||this.change,this.diffStrategy=e.strategy||this.diffStrategy,this}parseGraphDiffMetadata(e){const t={};t[k.U.Task]=y.I.Task,t[k.U.TaskDetails]=y.I.TaskDetails,t[k.U.TaskboardAssignedToTaskFormatting]=y.I.TaskboardAssignedToTaskFormatting,t[k.U.TaskboardBucketTaskFormatting]=y.I.TaskboardBucketTaskFormatting,t[k.U.TaskboardStatusTaskFormatting]=y.I.TaskboardStatusTaskFormatting,t[k.U.Bucket]=y.I.Bucket,t[k.U.Plan]=y.I.Plan,t[k.U.PlanDetails]=y.I.PlanDetails;const r=e["@odata.type"];if(null==r)throw new Error("OdataType not specified in graph diff");const n=t[r];let a;if(e["@removed"])a=b.U.Delete;else switch(a=b.U.Update,n){case y.I.Task:case y.I.Plan:a="createdDateTime"in e?b.U.Insert:b.U.Update;break;case y.I.Bucket:a="planId"in e?b.U.Insert:b.U.Update}return{entityType:n,updateType:a}}constructor(){this.id="",this.version="",this.diffStrategy=n.PlexDiffSync}}var T=r(95810),R=r(59889),w=r(34717),x=r(32561),D=r(64696),P=r(17776),I=r(97139),S=r(94078),j=r(54320),A=r.n(j);class U extends f.W{get entityType(){return this._entityType}static get builder(){return new C}getCreateDiffData(e){if(this._strategy===n.PlexDiffSync)return this.getDiffDataFromWebResource(e||this.entityType,this._change);if(this._strategy===n.GraphDeltaSync)return this.getDiffDataFromGraphResource(this._change);throw new Error("ArgumentException: invalid strategy")}getUpdateDiffData(e,t){if(this._strategy===n.PlexDiffSync)return this.getDiffDataFromWebResource(t||this.entityType,this._change,e);if(this._strategy===n.GraphDeltaSync)return this.getDiffDataFromGraphResource(this._change,e);throw new Error("ArgumentException: invalid strategy")}getDiffDataFromWebResource(e,t,r){let n;switch(e){case y.I.Task:n=w.Y.builder.getDiffDataFromWebResource(t,r);break;case y.I.TaskDetails:n=x.U.builder.getDiffDataFromWebResource(t,r);break;case y.I.Plan:n=T.c.builder.getDiffDataFromWebResource(t,r);break;case y.I.PlanDetails:n=R.y.builder.getDiffDataFromWebResource(t,r);break;case y.I.Bucket:n=g.f.builder.getDiffDataFromWebResource(t,r);break;case y.I.User:n={};break;case y.I.UserDetails:n=S.I.builder.getDiffDataFromWebResource(t,r);break;case y.I.TaskboardStatusFormatting:n={};break;case y.I.TaskboardStatusTaskFormatting:n=I.j.builder.getDiffDataFromWebResource(t,r);break;case y.I.TaskboardAssignedToFormatting:n={};break;case y.I.TaskboardAssignedToTaskFormatting:n=D.x.builder.getDiffDataFromWebResource(t,r);break;case y.I.TaskboardBucketFormatting:n={};break;case y.I.TaskboardBucketTaskFormatting:n=P.g.builder.getDiffDataFromWebResource(t,r);break;default:n={}}return e!==this.entityType&&A()(n)||(n.itemVersion=this.itemVersion),n}getDiffDataFromGraphResource(e,t){let r;switch(this.entityType){case y.I.Task:r=w.Y.builder.getDiffDataFromGraphResource(e,t);break;case y.I.TaskDetails:r=x.U.builder.getDiffDataFromGraphResource(e,t);break;case y.I.Plan:r=T.c.builder.getDiffDataFromGraphResource(e,t);break;case y.I.PlanDetails:r=R.y.builder.getDiffDataFromGraphResource(e,t);break;case y.I.Bucket:r=g.f.builder.getDiffDataFromGraphResource(e,t);break;case y.I.User:case y.I.UserDetails:case y.I.TaskboardStatusFormatting:r={};break;case y.I.TaskboardStatusTaskFormatting:r=I.j.builder.getDiffDataFromGraphResource(e,t);break;case y.I.TaskboardAssignedToFormatting:r={};break;case y.I.TaskboardAssignedToTaskFormatting:r=D.x.builder.getDiffDataFromGraphResource(e,t);break;case y.I.TaskboardBucketFormatting:r={};break;case y.I.TaskboardBucketTaskFormatting:r=P.g.builder.getDiffDataFromGraphResource(e,t);break;default:r={}}return r.itemVersion=this.itemVersion,r}constructor(e){super(e.id,e.version),this._entityType=e.entityType,this._change=e.change,this.updateType=e.updateType,this._strategy=e.diffStrategy}}class E{build(){return new B(this)}fromWebResource(e){const t=(e.Updates||[]).map(e=>U.builder.fromWebResource(e).build());return this.withPropertyBag({nextToken:e.NextToken,updates:t})}fromGraphResource(e){const t=(e.value||[]).map(e=>U.builder.fromGraphResource(e).build());return this.withPropertyBag({nextToken:e["@odata.deltaLink"],updates:t})}withPropertyBag(e){return this.nextToken=e.nextToken||"",this.updates=e.updates||[],this}constructor(){this.nextToken="",this.updates=[]}}class B{static get builder(){return new E}constructor(e){this.updates=h()(e.updates),this.nextToken=e.nextToken}}var v=r(40468),F=r(11910),q=r(80708),G=r(39589),N=r(76241),$=r(92970),O=r(6189),M=r(88457),J=r(77265),L=r(50204),z=r(44430),H=r(11755),V=r(679),_=r(41740),W=r.n(_),K=r(88458),Y=r.n(K),Q=r(55491),X=r.n(Q),Z=r(19853),ee=r.n(Z),te=r(33411),re=r.n(te),ne=r(34677),ae=r.n(ne),se=r(98990),ie=r.n(se),oe=r(32520),le=r.n(oe),ue=r(86178),ce=r.n(ue),de=r(52416),ge=r(91246),pe=r(98502),me=r(61739),he=r(89962),ye=r(31028);class fe extends H.K{getAugmentationLoopToken(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async getRosterContainerAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["containerId"]);if(null!==t)return Promise.reject(t);const r=`${this.betaBaseUrl}planner/rosters/${e.containerId}`,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getRosterContainerAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No roster data returned");return new J.j(e.id,e.assignedSensitivityLabel,e["@odata.etag"])}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getUnifiedGroupDetailsAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["groupId"]);if(null!==t)return Promise.reject(t);try{const[t,r,n,a]=await Promise.allSettled([this.getUnifiedGroupDriveUrlAsync(e),this.getOwnersOfGroupAsync(e),this.getJoinedGroupsCountByIdAsync({groupId:e.groupId,userId:i.B.currentUserId}),this.getGroupCreationOptionsAsync(e)]);if("rejected"===r.status)return Promise.reject(r.reason);const s=r.value,o=le()(s,e=>e.id===i.B.currentUserId);let l,u;if("fulfilled"===t.status&&(l=t.value),"fulfilled"===a.status&&(u=a.value),"rejected"===n.status)return Promise.reject(n.reason);const c=n.value,d=-1!==o?z.N.Owner:c>0?z.N.Member:z.N.NonMember;return O.y.builder.withPropertyBag({creationOptions:u,id:e.groupId,currentUserRelationToGroup:d,oneDriveUrl:l,owners:s}).build()}catch(r){return Promise.reject(r)}}async getGroupCreationOptionsAsync(e){const t=`${this.v1BaseUrl}groups/${e.groupId}?$select=creationOptions`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getGroupCreationOptionsAsync")});try{const e=await r.clone().json();if(null==e)throw new Error("No group creation options data returned");return e.creationOptions}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getOwnersOfGroupAsync(e){const t=`${this._baseUrl}groups/${e.groupId}/owners`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getOwnersOfGroupAsync")});try{const e=await r.clone().json();if(null==e)throw new Error("No unified group owners data returned");return re()(e.value,e=>L.K.builder.fromGraphUserResource(e).build())}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getJoinedGroupsCountByIdAsync(e){const t=`${this._baseUrl}groups/${e.groupId}/members?$filter=id eq '${e.userId}'&$count=true&$select=id`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getJoinedGroupCountAsync"),headers:{ConsistencyLevel:"eventual"}});try{const e=(await r.clone().json())["@odata.count"];if("number"!==typeof e)throw new Error("Invalid response from server, expected a number");return e}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getUnifiedGroupDriveUrlAsync(e){const t=`${this._baseUrl}groups/${e.groupId}/drive/root/weburl`;try{const e=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getUnifiedGroupDriveUrlAsync")});try{const t=await e.clone().json();if(null==t)throw new Error("No unified group drive url data returned");return t.value}catch(r){return Promise.reject(pe.g.generateAjaxClientError(e,r))}}catch(r){const e=r.response?.status,t=r.response?.headers.get("Location");return e===308&&t?t:Promise.reject(r)}}async getJoinedGroupsAsync(e){const t=`${this._baseUrl}me/memberOf/microsoft.graph.group?$filter=groupTypes/any(g:g eq 'Unified')`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getJoinedGroupsAsync")});try{const e=await r.clone().json();if(null==e?.value)throw new Error("No unified group data returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=[];return X()(e.value,e=>{n.push($.E.builder.fromGraphResource(e).build())}),{data:n,skipToken:t}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getFavoritePlansForUserAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["userId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?`${this.betaBaseUrl}me/planner/favoritePlans?$expand=details`:e.nextContinuationToken,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getFavoritePlansForUserAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,me.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>v.T.builder.fromGraphPlanResourceTypes(e,e.details).build()),NextContinuationToken:t},statusCode:n.status,xCorrelationId:null}}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getRecentPlansForUserAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["userId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?`${this.betaBaseUrl}me/planner/recentPlans?$expand=details`:e.nextContinuationToken,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getRecentPlansForUserAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,me.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>v.T.builder.fromGraphPlanResourceTypes(e,e.details).build()),NextContinuationToken:t},statusCode:n.status,xCorrelationId:null}}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}getRecommendedDocumentPlansForUserAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getAllDocumentPlansForUserAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async getContainersAsync(e){let t=[];switch(e.containerType){case l.K.Group:t=await this.getUserGroupContainersAsync();break;case l.K.Roster:t=await this.getUserRosterContainersAsync(e.nextContinuationToken);break;default:return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}return{data:{Results:t,NextContinuationToken:e.nextContinuationToken??null},statusCode:null,xCorrelationId:null}}async getUserGroupContainersAsync(){return(await this.getJoinedGroupsAsync()).data.map(e=>new M.Z(e.id,e,null))}async getUserRosterContainersAsync(e){return(await this.getUserRosterPlansAsync({nextContinuationToken:e})).Results.map(e=>new J.j(e.container.externalId,null,""))}async getPlansForGroupAsync(e){return this.getPlansForContainerRecursiveAsync({containerType:l.K.Group,accumulator:[],containerId:e.groupId})}async getPlansForGroupInternalAsync(e){const t=e.nextLink??`${this.betaBaseUrl}groups/${e.groupId}/planner/plans`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlansForGroupAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No plan data returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=e.value.map(e=>T.c.builder.fromGraphResource(e).build());return{skipToken:t,data:n}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async resolveGroupsToPlansBatchedAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["groupIds"]);if(null!==t)return Promise.reject(t);const r=[],n={};e.groupIds.forEach(e=>{r.push(this.getPlansForGroupAsync({groupId:e}).then(t=>{n[e]=t}))});try{return await Promise.all(r),n}catch(a){return Promise.reject(a)}}resolveContainerIdsToPlansBatchedAsync(e){const{containerType:t,containerIds:r}=e;switch(e.containerType){case l.K.Group:case l.K.Roster:case l.K.User:return this.resolveContainersToPlansBatchedAsync({containerType:t,containerIds:r});default:return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}}async resolveContainersToPlansBatchedAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["containerIds"]);if(null!==t)return Promise.reject(t);const{containerType:r}=e,n=[],a={};e.containerIds.forEach(e=>{n.push(this.getPlansForContainerRecursiveAsync({containerType:r,accumulator:[],containerId:e}).then(t=>{a[e]=t}))});try{return await Promise.all(n),a}catch(s){return Promise.reject(s)}}async getPlansForContainerRecursiveAsync(e){try{const{containerType:t,accumulator:r,containerId:n,skipToken:a}=e;let s;switch(e.containerType){case l.K.Group:s=await this.getPlansForGroupInternalAsync({groupId:e.containerId,nextLink:a});break;case l.K.Roster:s=await this.getPlansForRosterAsync({rosterId:e.containerId,nextLink:a});break;case l.K.User:s=await this.fetchUserContainerPlansAsync({userId:e.containerId,nextLink:a});break;default:throw new Error("ContainerType not supported")}const i=s?.data;return s.skipToken?this.getPlansForContainerRecursiveAsync({containerType:t,accumulator:r.concat(i),containerId:n,skipToken:s.skipToken}):e.accumulator.concat(i)}catch(t){return Promise.reject(t)}}async fetchUserContainerPlansAsync(e){const t=e.nextLink??`${this.betaBaseUrl}planner/plans?$filter=container/type+eq+'user'+and+container/containerId+eq+'${e.userId}'`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("fetchUserContainerPlansAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No data returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=e.value.map(e=>T.c.builder.fromGraphResource(e).build());return{skipToken:t,data:n}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getPlansForRosterAsync(e){const t=e.nextLink??`${this.betaBaseUrl}planner/rosters/${e.rosterId}/plans`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlansForRosterAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No plan data returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=e.value.map(e=>T.c.builder.fromGraphResource(e).build());return{skipToken:t,data:n}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getPlanEntitySetAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["planId"]);if(null!==t)return Promise.reject(t);const r=`${this.betaBaseUrl}planner/plans/${e.planId}?$expand=details`,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlanEntitySetAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No plan data returned");if(null==e.details)throw new Error("No plan details data returned");{const t=e,r=T.c.builder.fromGraphResource(t).build(),n=e.details,a=R.y.builder.fromGraphResource(n).build();return v.T.builder.withPlan(r).withDetails(a).build()}}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getPlanEntitySetByExternalIdAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["contextScenarioId","externalObjectId"]);if(null!==t)return Promise.reject(t);const r=`${this.betaBaseUrl}planner/plans/$filter=contextScenarioId -eq ${encodeURIComponent(e.contextScenarioId)} and externalObjectId -eq ${encodeURIComponent(e.externalObjectId)}&$expand=details`,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getPlanEntitySetByExternalIdAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No plan data returned");if(null==e.details)throw new Error("No plan details data returned");{const t=e,r=T.c.builder.fromGraphResource(t).build(),n=e.details,a=R.y.builder.fromGraphResource(n).build();return v.T.builder.withPlan(r).withDetails(a).build()}}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getTaskEntitySetAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["taskId"]);if(null!==t)return Promise.reject(t);const r=`${this.betaBaseUrl}planner/tasks/${e.taskId}?$expand=details,assignedToTaskBoardFormat,bucketTaskBoardFormat,progressTaskBoardFormat`,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTaskEntitySetAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No task data returned");if(null==e.details)throw new Error("No details data returned");if(null==e.assignedToTaskBoardFormat)throw new Error("No assignedToTaskBoardFormat data returned");if(null==e.bucketTaskBoardFormat)throw new Error("No bucketTaskBoardFormat data returned");if(null==e.progressTaskBoardFormat)throw new Error("No progressTaskBoardFormat data returned");return q.F.builder.fromGraphResource(e).build()}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getTasksForPlanAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["planId"]);if(null!==t)return Promise.reject(t);const r=null==e.nextContinuationToken?`${this.betaBaseUrl}planner/plans/${e.planId}/tasks?$expand=details,assignedToTaskBoardFormat,bucketTaskBoardFormat,progressTaskBoardFormat`:e.nextContinuationToken,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTasksForPlanAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No task data for plan returned");const t=(0,me.n0)(e[this.skipTokenKey]),r=e.value;return{data:{Results:r.map(e=>q.F.builder.fromGraphResource(e).build()),NextContinuationToken:t},statusCode:n.status,xCorrelationId:null}}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getTasksAssignedToCurrentUserAsync(e){const t=null==e.nextContinuationToken?`${this.betaBaseUrl}me/planner/tasks?$expand=details`:e.nextContinuationToken,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTasksAssignedToCurrentUserAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No task data for user returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=e.value;return{data:{Results:n.map(e=>q.F.builder.fromGraphResource(e).build()),NextContinuationToken:t},statusCode:r.status,xCorrelationId:null}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getBucketAsync(e){const t=`${this._baseUrl}planner/buckets/${e.bucketId}`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No bucket data returned");const t=e,n=g.f.builder.fromGraphResource(t).build();return p.a.builder.withBucket(n).build()}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getBucketsForPlanAsync(e){const t=`${this._baseUrl}planner/plans/${e.planId}/buckets`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getBucketsForPlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No bucket data for plan returned");const t=e.value;return t.map(e=>g.f.builder.fromGraphResource(e).build())}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async validateGroupNamesAsync(e){const t=e.isCreation?`${this._baseUrl}/directoryObjects/validateProperties`:`${this._baseUrl}groups/${e.unifiedGroup.id}/validateProperties`;let r={};r=e.isCreation?{entityType:"Group",displayName:e.unifiedGroup.displayName,mailNickname:e.unifiedGroup.mailNickname}:{displayName:e.unifiedGroup.displayName};try{const e=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("validateGroupNamesAsync")});if(e.status===a.t3.NoContent)return pe.g.parseValidationResponse("");const n=await e.clone().text();if(null==n)throw new Error("No validateGroupNamesAsync data returned");return pe.g.parseValidationResponse(n)}catch(n){if(n.response?.status===a.t3.UnprocessableEntity){const e=await n.response.clone().text();return pe.g.parseValidationResponse(e)}return Promise.reject(n)}}async getCurrentUserDetailsAsync(e){const t=`${this.betaBaseUrl}me/planner`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getCurrentUserDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No user data returned");const t=e;return S.I.builder.fromGraphWebResource(t).build()}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getDiffSyncTokenAsync(){const e=`${this.betaBaseUrl}me/planner/all/delta`,t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getDiffSyncTokenAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e||null==e[this.skipTokenKey])throw new Error("No data returned");return e[this.skipTokenKey]}catch(r){return Promise.reject(pe.g.generateAjaxClientError(t,r))}}async getDiffSyncFeedAsync(e){let t=e.diffSyncToken;t&&t.indexOf("?")>0&&(t=t.split("?")[1]);const r=`${this.betaBaseUrl}me/planner/all/delta?${t}`,n=await this.ajaxClient.executeRequest(r,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getDiffSyncFeedAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No data returned");return B.builder.fromGraphResource(e).build()}catch(a){return Promise.reject(pe.g.generateAjaxClientError(n,a))}}async getFilteredTenantUsersByKeyword(e){let t=`${this._baseUrl}users?`,r="";i.B.clientSettings.ECSSettings.RestrictedGuestAccessExtendedFlight&&(r="userType ne 'guest' and ",t+="$count=true&"),r+="("+(0,me.Ny)("givenName",e.keyword)+" or "+(0,me.Ny)("surname",e.keyword)+" or "+(0,me.Ny)("displayName",e.keyword)+" or "+(0,me.Ny)("mail",e.keyword)+" or "+(0,me.Ny)("userPrincipalName",e.keyword)+")",t+=`$filter=${r}`,e.skipToken&&(t+=`&$skiptoken=${e.skipToken}`),t+="&$select=id,businessPhones,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,proxyAddresses,userType";const n=i.B.clientSettings.ECSSettings.RestrictedGuestAccessExtendedFlight?{ConsistencyLevel:"eventual"}:{},a=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getFilteredTenantUsersByKeyword"),headers:n});let s=[];try{s=(await a.clone().json()).value??[]}catch(o){s=[]}return s.map(e=>L.K.builder.fromGraphUserResource(e).build())}getSuiteNav(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getIsUserLicensed(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getLicensesForUser(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async getTenantGroupSettingsAsync(){const e=`${this.v1BaseUrl}groupSettings`,t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getTenantGroupSettingsAsync")});try{const e=await t.clone().json();if(null==e||!e.value)throw pe.g.generateAjaxClientError(t,"No tenant group settings returned");const r=ie()(e.value,e=>e.templateId===this.unifiedGroupTemplateId&&e.displayName===this.unifiedGroupDisplayName);return r?d.h.builder.fromGraphResource(r).build():d.h.builder.withPropertyBag({enableUnifiedGroupCreation:!0}).build()}catch(r){throw pe.g.generateAjaxClientError(t,r)}}async getSensitivityLabelsAsync(){const e=`${this.betaBaseUrl}me/informationProtection/sensitivityLabels?$filter=applicableTo+has+'site,unifiedGroup'`,t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityLabelsAsync")});try{const e=await t.clone().json();if(null==e||!e.value)throw pe.g.generateAjaxClientError(t,"No sensitivity labels returned");return e.value.map(e=>u.k.builder.fromGraphResource(e).build())}catch(r){throw pe.g.generateAjaxClientError(t,r)}}async getUnifiedGroupSensitivityLabelAsync(e){const t=`${this.v1BaseUrl}groups/${e.groupId}?$select=assignedLabels`,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityLabelsAsync")});try{const e=await r.clone().json();if(null==e||!e.value||!e.value[0])throw pe.g.generateAjaxClientError(r,"No assigned label returned");return e.value[0].labelId}catch(n){throw pe.g.generateAjaxClientError(r,n)}}async getSensitivityPolicySettingsAsync(){const e=`${this.betaBaseUrl}me/informationProtection/sensitivityPolicySettings?$filter=applicableTo+has+'site,unifiedGroup'`,t=await this.ajaxClient.executeRequest(e,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getSensitivityPolicySettingsAsync")});try{const e=await t.clone().json();return c.H.fromGraphResource(e)}catch(r){return c.H.fromGraphResource(null)}}getLatestBuild(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getAppContextSettings(){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getOperationStatusAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getContainerPermissionsAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}getTaskPermissionsAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async getUserRosterPlansAsync(e){const t=null==e.nextContinuationToken?`${this.betaBaseUrl}me/planner/rosterPlans`:e.nextContinuationToken,r=await this.ajaxClient.executeRequest(t,{telemetryConfig:this.getDefaultRequestTelemetryConfig("getUserRosterPlansAsync"),headers:{Prefer:"include-unknown-enum-members"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No data returned");const t=(0,me.n0)(e[this.skipTokenKey]),n=e.value.map(e=>T.c.builder.fromGraphResource(e).build());return{NextContinuationToken:t,Results:n}}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async getFormResponseAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async getApprovalDetailsAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async deleteBucketAsync(e){const t=`${this._baseUrl}planner/buckets/${e.bucketId}`;return await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),Promise.resolve()}async deletePlanAsync(e){const t=`${this._baseUrl}planner/plans/${e.planId}`;return await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deletePlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),Promise.resolve()}async deleteUnifiedGroupAsync(e){const t=`${this._baseUrl}groups/${e.groupId}`;return await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteUnifiedGroupAsync")}),Promise.resolve()}async deleteTaskAsync(e){const t=`${this._baseUrl}planner/tasks/${e.taskId}`;return await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,headers:{[s.Lr.IfMatch]:e.itemVersion},telemetryConfig:this.getDefaultRequestTelemetryConfig("deleteTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()}),q.F.builder.withTask(w.Y.builder.withPropertyBag({id:e.taskId,planId:"PLN1",title:""}).build()).withDetails(x.U.builder.withId(e.taskId).build()).withFormatData(G._.builder.withPropertyBag({assignedBoardFormat:D.x.builder.withId(e.taskId).build(),bucketBoardFormat:P.g.builder.withId(e.taskId).build(),progressBoardFormat:I.j.builder.withId(e.taskId).build()}).build()).build()}async cancelUploadSession(e){const t=e.uploadSession.uploadUrl;return await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("cancelUploadSessionAsync")}),Promise.resolve()}async removeUserFromPlannerRosterMembers(e){const t=`${this.betaBaseUrl}planner/rosters/${e.container.externalId}/members/${e.userId}`;await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("removeUserFromPlannerRosterMembers"),retryConfig:this.getTaskServiceRequestRetryConfig({maxRetryCount:0})})}async removeUserFromGroupMembers(e){const t=`${this._baseUrl}groups/${e.container.externalId}/members/${e.userId}/$ref`;await this.ajaxClient.executeRequest(t,{method:a.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("removeUserFromGroupMembers"),retryConfig:{maxRetryCount:0}})}async cancelApproval(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async createPlannerRosterAsync(){const e=`${this._baseUrl}planner/rosters`,t={"@odata.type":k.U.PlannerRoster},r=await this.ajaxClient.executeRequest(e,{method:a.PJ.Post,body:JSON.stringify(t),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createPlannerRosterAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await r.clone().json();if(null==e)throw new Error("No group data returned");return new J.j(e.id,null,"")}catch(n){return Promise.reject(pe.g.generateAjaxClientError(r,n))}}async createGroupAsync(e){const t=`${this._baseUrl}groups`,r=e.unifiedGroupInfo.toGraphSerializable();r.autoSubscribeNewMembers=void 0,delete r.Id,r["owners@odata.bind"]=[`${this._baseUrl}users/${i.B.currentUserId}`],r["members@odata.bind"]=[`${this._baseUrl}users/${i.B.currentUserId}`];const n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createGroupAsync")});try{const e=await n.clone().json();if(null==e)throw new Error("No group data returned");const t=e;return $.E.builder.fromGraphResource(t).build()}catch(o){return Promise.reject(pe.g.generateAjaxClientError(n,o))}}async createApproval(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async createPlanAsync(e){const t=`${this.betaBaseUrl}planner/plans`,r=e.newPlanEntitySet.plan.toGraphSerializable(),n=e.newPlanEntitySet.planDetails?.toGraphSerializable();n&&delete n["@odata.etag"],A()(r.creationSource)&&delete r.creationSource;const i={...r,details:n},o=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(i),headers:{[s.Lr.ContentType]:s.Mq.Json,Prefer:"include-unknown-enum-members"},telemetryConfig:this.getDefaultRequestTelemetryConfig("createPlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await o.clone().json();if(null==e)throw new Error("No plan data returned");const t=e,r=T.c.builder.fromGraphResource(t).build();return v.T.builder.withPlan(r).build()}catch(l){return Promise.reject(pe.g.generateAjaxClientError(o,l))}}copyPlanAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async createBucketAsync(e){const t=`${this._baseUrl}planner/buckets/`,r=e.bucketInfo.toGraphSerializable(),n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No bucket data returned");const t=g.f.builder.fromGraphResource(e).build();return p.a.builder.withBucket(t).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async createTaskAsync(e){const t=`${this.betaBaseUrl}planner/tasks`,r=e.newTaskEntitySet.task.toGraphSerializable(),n=e.newTaskEntitySet.taskDetails?.toGraphSerializable(),i=e.newTaskEntitySet.taskFormatData?.toGraphSerializable();r.recurrence&&delete r.recurrence.seriesId,n&&(delete n["@odata.etag"],null==n.description&&delete n.description,null==n.notes&&delete n.notes),i?.assignmentBoardFormat&&delete i.assignmentBoardFormat["@odata.etag"],i?.bucketBoardFormat&&delete i.bucketBoardFormat["@odata.etag"],i?.progressBoardFormat&&delete i.progressBoardFormat["@odata.etag"];const o={...r,...i,details:n},l=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(o),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await l.clone().json();if(null==e)throw new Error("No task data returned");return await this.getTaskEntitySetAsync({taskId:e.id})}catch(u){return Promise.reject(pe.g.generateAjaxClientError(l,u))}}async updateBucketAsync(e,t){const r=`${this._baseUrl}planner/buckets/${e.originalBucket.id}`,n={};if(e.originalBucket.title!==e.updatedBucket.title&&(n.name=e.updatedBucket.title),e.originalBucket.orderHint!==e.updatedBucket.orderHint&&(n.orderHint=e.updatedBucket.orderHint),e.originalBucket.planId!==e.updatedBucket.planId&&(n.planId=e.updatedBucket.planId),A()(n))return p.a.builder.withBucket(e.updatedBucket).build();const i=await this.ajaxClient.executeRequest(r,{method:a.PJ.Patch,body:JSON.stringify(n),headers:{[s.Lr.IfMatch]:e.originalBucket.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("updateBucketAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await i.clone().json();if(null==e)throw new Error("No update response returned");const t=e,r=g.f.builder.fromGraphResource(t).build();return p.a.builder.withBucket(r).build()}catch(o){return Promise.reject(pe.g.generateAjaxClientError(i,o))}}async updatePlanAsync(e,t){const{originalPlanEntitySet:r,updatedPlanEntitySet:n}=e;let i={};if(r.plan&&n.plan){const e=r.plan.toGraphSerializable(),t=n.plan.toGraphSerializable(),a=(e,t,r)=>"displayNameSegments"===r?t:V.B.getDiffMomentCustomizer(e,t,r),s=(e,t,r)=>{if("contexts"===r){if(ee()(e,t))return{};{const r=V.B.getDiff(e,t),n=V.B.getDiff(t,e);null!=r&&X()(r,(e,t)=>{r[t]=null}),null!=n&&X()(n,(e,r)=>{n[r]=t[r]});const s=ae()(r,n);for(const i in e)if(i in t){const r=e[i],n=t[i];s&&!ee()(r,n)&&(s[i]=V.B.getDiff(r,n,a),s[i]["@odata.type"]="#microsoft.graph.plannerPlanContext")}return s}}return V.B.getDiffMomentCustomizer(e,t,r)};i=V.B.getDiff(e,t,s)}const o={};if(r.planDetails&&n.planDetails){if(!ee()(r.planDetails.categories,n.planDetails.categories)){const e={};for(let t=0;t<r.planDetails.categories.length;t++)r.planDetails.categories[t]!==n.planDetails.categories[t]&&(e["category"+(t+1)]=n.planDetails.categories[t]);o.categoryDescriptions=e}if(!ee()(r.planDetails.sharedWith,n.planDetails.sharedWith)){const e={},t=Y()(r.planDetails.sharedWith,n.planDetails.sharedWith);for(let r=0;r<t.length;r++)e[t[r]]=!1;const a=Y()(n.planDetails.sharedWith,r.planDetails.sharedWith);for(let r=0;r<a.length;r++)e[a[r]]=!0;o.sharedWith=e}if(!ee()(r.planDetails.contextDetails,n.planDetails.contextDetails)){const e={};for(const t in r.planDetails.contextDetails)t in n.planDetails.contextDetails?ee()(r.planDetails.contextDetails[t].url,n.planDetails.contextDetails[t].url)||(e[t]={"@odata.type":"#microsoft.graph.plannerPlanContextDetails",url:n.planDetails.contextDetails[t].url}):e[t]=null;for(const t in n.planDetails.contextDetails)t in r.planDetails.contextDetails||(e[t]={"@odata.type":"#microsoft.graph.plannerPlanContextDetails",url:n.planDetails.contextDetails[t].url});o.contextDetails=e}}const l=async()=>{const e=`${this.betaBaseUrl}planner/plans/${r.plan.id}`,t=await this.ajaxClient.executeRequest(e,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:r.plan.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(i),telemetryConfig:this.getDefaultRequestTelemetryConfig("updatePlanAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e)throw new Error("No update response returned");const n=e;n.container.type=r.plan.container.containerType;return T.c.builder.fromGraphResource(n).build()}catch(n){return Promise.reject(pe.g.generateAjaxClientError(t,n))}},u=async()=>{const e=`${this.betaBaseUrl}planner/plans/${r.planDetails.id}/details`,t=await this.ajaxClient.executeRequest(e,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:r.planDetails.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(o),telemetryConfig:this.getDefaultRequestTelemetryConfig("updatePlanDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await t.clone().json();if(null==e)throw new Error("No update response returned");const r=e;return R.y.builder.fromGraphResource(r).build()}catch(n){return Promise.reject(pe.g.generateAjaxClientError(t,n))}};if(A()(i)&&A()(o))return v.T.builder.withPlan(n.plan).withDetails(n.planDetails).build();if(A()(i)||A()(o)){if(A()(i)){const e=await u();return v.T.builder.withPlan(r.plan).withDetails(e).build()}{const e=await l();return v.T.builder.withPlan(e).withDetails(r.planDetails).build()}}{const e=await l(),t=100;await(0,de.y)(t);const r=await u();return v.T.builder.withPlan(e).withDetails(r).build()}}async updateTaskAsync(e,t){const r=e.originalTaskEntitySet.id;let n={};if(e.originalTaskEntitySet.task&&e.updatedTaskEntitySet.task){const t=e.originalTaskEntitySet.task.toGraphSerializable(),r=e.updatedTaskEntitySet.task.toGraphSerializable(),a={category1:!1,category2:!1,category3:!1,category4:!1,category5:!1,category6:!1,category7:!1,category8:!1,category9:!1,category10:!1,category11:!1,category12:!1,category13:!1,category14:!1,category15:!1,category16:!1,category17:!1,category18:!1,category19:!1,category20:!1,category21:!1,category22:!1,category23:!1,category24:!1,category25:!1},s=(e,t,r)=>{if("appliedCategories"===r){if(ee()(e,t))return{};{const r=ae()(W()(a),e),n=ae()(W()(a),t);return V.B.getDiff(r,n)}}if("assignments"===r){if(ee()(e,t))return{};{const r=V.B.getDiff(e,t),n=V.B.getDiff(t,e);return X()(r,(e,t)=>{r[t]=null}),X()(n,(e,r)=>{n[r]=t[r]}),ae()(r,n)}}return"recurrence"===r?ee()(e,t)?{}:null==e?{schedule:t.schedule}:V.B.getDiff(e,t,i):V.B.getDiffMomentCustomizer(e,t,r)},i=(e,t,r)=>"schedule"===r?ee()(e,t)?{}:null==t||null==e?t:V.B.getDiff(e,t,o):V.B.getDiffMomentCustomizer(e,t,r),o=(e,t,r)=>"pattern"===r?ee()(e,t)?{}:t:V.B.getDiffMomentCustomizer(e,t,r);n=V.B.getDiff(t,r,s)}let i={};if(e.originalTaskEntitySet.taskDetails&&e.updatedTaskEntitySet.taskDetails){const t=e.originalTaskEntitySet.taskDetails.toGraphSerializable(),r=e.updatedTaskEntitySet.taskDetails.toGraphSerializable(),n=(e,t,r)=>{if("checklist"===r){if(ee()(e,t))return{};{const r=V.B.getDiff(e,t),n=V.B.getDiff(t,e);X()(r,(e,t)=>{r[t]=null}),X()(n,(e,r)=>{n[r]=t[r]});const a=ae()(r,n);if(a)for(const s in e)if(s in t){const r=e[s],n=t[s];ee()(r,n)||(a[s]=V.B.getDiff(r,n,V.B.getDiffMomentCustomizer),a[s]["@odata.type"]="microsoft.graph.plannerChecklistItem")}return a}}if("references"===r){if(ee()(e,t))return{};{const r=V.B.getDiff(e,t),n=V.B.getDiff(t,e);X()(r,(e,t)=>{r[t]=null}),X()(n,(e,r)=>{n[r]=t[r]});const a=ae()(r,n);if(a)for(const s in e)if(s in t){const r=e[s],n=t[s];ee()(r,n)||(a[s]=V.B.getDiff(r,n,V.B.getDiffMomentCustomizer),a[s]["@odata.type"]="#microsoft.graph.plannerExternalReference")}return a}}if("notes"===r)return ee()(e,t)?{}:t;if("forms"!==r||ee()(e,t))return V.B.getDiffMomentCustomizer(e,t,r);{const r=e,n=t,a=V.B.getDiff(r,n,V.B.getDiffMomentCustomizer);if(a){for(const e in a)a.hasOwnProperty(e)&&(a[e].formResponse=String(a[e].formResponse),a[e]["@odata.type"]="#microsoft.taskServices.form");return a}}};i=V.B.getDiff(t,r,n)}const o={},l={},u={};if(e.originalTaskEntitySet.taskFormatData&&e.updatedTaskEntitySet.taskFormatData){if(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat&&e.updatedTaskEntitySet.taskFormatData.assignmentBoardFormat){const{orderHintsByAssignee:t,unassignedOrderHint:r}=e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat,{orderHintsByAssignee:n,unassignedOrderHint:a}=e.updatedTaskEntitySet.taskFormatData.assignmentBoardFormat;if(!ee()(t,n)){const e={};Object.keys(n).forEach(r=>{n[r]!==t[r]&&(e[r]=n[r])}),o.orderHintsByAssignee=e}r!==a&&(o.unassignedOrderHint=a)}e.originalTaskEntitySet.taskFormatData.bucketBoardFormat&&e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat&&e.originalTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint!==e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint&&(l.orderHint=e.updatedTaskEntitySet.taskFormatData.bucketBoardFormat.orderHint),e.originalTaskEntitySet.taskFormatData.progressBoardFormat&&e.updatedTaskEntitySet.taskFormatData.progressBoardFormat&&e.originalTaskEntitySet.taskFormatData.progressBoardFormat.orderHint!==e.updatedTaskEntitySet.taskFormatData.progressBoardFormat.orderHint&&(u.orderHint=e.updatedTaskEntitySet.taskFormatData.progressBoardFormat.orderHint)}const c=!(!A()(n)||!A()(e.originalTaskEntitySet.task)),d=!(!A()(i)||!A()(e.originalTaskEntitySet.taskDetails)),g=!(!A()(o)||e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat)),p=!(!A()(l)||e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.bucketBoardFormat)),m=!(!A()(u)||e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.progressBoardFormat));let h;(c||d||g||p||m)&&(h=await this.getTaskEntitySetAsync({taskId:r}));const y=(async()=>{if(A()(n))return A()(e.originalTaskEntitySet.task)?h.task:e.originalTaskEntitySet.task;{const r=`${this.betaBaseUrl}planner/tasks/${e.originalTaskEntitySet.id}`,i=await this.ajaxClient.executeRequest(r,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:e.originalTaskEntitySet.task.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(n),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateTaskAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await i.clone().json();if(null==e)throw new Error("No update response returned");return w.Y.builder.fromGraphResource(e).build()}catch(t){return Promise.reject(pe.g.generateAjaxClientError(i,t))}}})(),f=(async()=>{if(A()(i))return A()(e.originalTaskEntitySet.taskDetails)?h.taskDetails:e.originalTaskEntitySet.taskDetails;return await this.updateTaskDetailsAsync({taskDetailsChanges:i,taskDetails:e.originalTaskEntitySet.taskDetails})})(),b=(async()=>{if(A()(o))return e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat)?e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat:h.taskFormatData.assignmentBoardFormat;await y;return await this.updateAssignedToTaskboardTaskFormatAsync({assignedToTaskBoardFormatChanges:o,assignedToTaskboadFormat:e.originalTaskEntitySet.taskFormatData.assignmentBoardFormat})})(),k=(async()=>{if(A()(l))return e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.bucketBoardFormat)?e.originalTaskEntitySet.taskFormatData.bucketBoardFormat:h.taskFormatData.bucketBoardFormat;return await this.updateBucketTaskboardTaskFormatAsync({bucketTaskBoardFormatChanges:l,bucketTaskboadFormat:e.originalTaskEntitySet.taskFormatData.bucketBoardFormat})})(),C=(async()=>{if(A()(u))return e.originalTaskEntitySet.taskFormatData&&!A()(e.originalTaskEntitySet.taskFormatData.progressBoardFormat)?e.originalTaskEntitySet.taskFormatData.progressBoardFormat:h.taskFormatData.progressBoardFormat;return await this.updateProgressTaskboardTaskFormatAsync({progressTaskBoardFormatChanges:u,progressTaskboadFormat:e.originalTaskEntitySet.taskFormatData.progressBoardFormat})})(),T=[y,f,b,k,C],R=await Promise.all(T),x=G._.builder.withPropertyBag({assignedBoardFormat:R[2],bucketBoardFormat:R[3],progressBoardFormat:R[4]}).build();return q.F.builder.withTask(R[0]).withDetails(R[1]).withFormatData(x).build()}undeleteTaskAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async updateTaskDetailsAsync(e){const t=`${this.betaBaseUrl}planner/tasks/${e.taskDetails.id}/details`,r=e.taskDetailsChanges,n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:e.taskDetails.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateTaskDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");return x.U.builder.fromGraphResource(e).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async updateAssignedToTaskboardTaskFormatAsync(e){const t=`${this._baseUrl}planner/tasks/${e.assignedToTaskboadFormat.id}/assignedToTaskBoardFormat`,r=e.assignedToTaskBoardFormatChanges,n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:e.assignedToTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateAssignedToTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");return D.x.builder.fromGraphResource(e).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async updateBucketTaskboardTaskFormatAsync(e){const t=`${this._baseUrl}planner/tasks/${e.bucketTaskboadFormat.id}/bucketTaskBoardFormat`,r=e.bucketTaskBoardFormatChanges,n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:e.bucketTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateBucketTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");return P.g.builder.fromGraphResource(e).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async updateProgressTaskboardTaskFormatAsync(e){const t=`${this._baseUrl}planner/tasks/${e.progressTaskboadFormat.id}/progressTaskBoardFormat`,r=e.progressTaskBoardFormatChanges,n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:e.progressTaskboadFormat.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateProgressTaskboardTaskFormatAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No update response returned");return I.j.builder.fromGraphResource(e).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async updateUserDetailsAsync(e,t){const r=`${this.betaBaseUrl}me/planner`,n=e.originalUserDetails.recentPlans.toGraphSerializable(),i=e.updatedUserDetails.recentPlans.toGraphSerializable(),o=V.B.getDiff(n,i),l=V.B.getDiff(i,n);X()(o,(e,t)=>{o[t]=null}),X()(l,(e,t)=>{l[t]=i[t]});const u=ae()(o,l),c=await this.getCurrentUserDetailsAsync({}),d={recentPlanReferences:u},g=await this.ajaxClient.executeRequest(r,{method:a.PJ.Patch,headers:{[s.Lr.IfMatch]:c.itemVersion,Prefer:"return=representation",[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(d),telemetryConfig:this.getDefaultRequestTelemetryConfig("updateUserDetailsAsync"),retryConfig:this.getTaskServiceRequestRetryConfig()});try{const t=await g.clone().json();if(null==t)throw new Error("No post response returned");const r={...t,id:e.updatedUserDetails.id};return S.I.builder.fromGraphWebResource(r).build()}catch(p){return Promise.reject(pe.g.generateAjaxClientError(g,p))}}async updateUnifiedGroupAsync(e,t){const r=`${this._baseUrl}groups/${e.originalGroup.id}`,n={};return e.originalGroup.displayName!==e.updatedGroup.displayName&&(n.displayName=e.updatedGroup.displayName),e.originalGroup.description!==e.updatedGroup.description&&(n.description=e.updatedGroup.description),e.originalGroup.visibility!==N.X.HiddenMembership&&e.originalGroup.visibility!==e.updatedGroup.visibility&&(n.visibility=N.X[e.updatedGroup.visibility]),A()(n)||await this.ajaxClient.executeRequest(r,{method:a.PJ.Patch,body:JSON.stringify(n),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("updateUnifiedGroupAsync")}),e.updatedGroup}async updateApproval(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async addUserToContainer(e){switch(e.container.containerType){case l.K.Roster:await this.addUserToPlannerRosterMembers(e);break;case l.K.Group:await this.addUserToGroupMembers(e);break;default:return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}}async removeUserFromContainer(e){switch(e.container.containerType){case l.K.Roster:await this.removeUserFromPlannerRosterMembers(e);break;case l.K.Group:await this.removeUserFromGroupMembers(e);break;default:return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}}async setRosterSensitivityLabelAsync(e){const t=`${this.betaBaseUrl}/planner/rosters/${e.rosterContainer.externalId}/assignSensitivityLabel`,r={sensitivityLabelId:e.rosterContainer.assignedSensitivityLabel?.sensitivityLabelId,assignmentMethod:e.rosterContainer.assignedSensitivityLabel?.assignmentMethod},n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,headers:{[s.Lr.IfMatch]:e.rosterContainer.itemVersion,[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(r),telemetryConfig:{apiName:fe.apiName,methodName:"setRosterSensitivityLabel"},retryConfig:this.getTaskServiceRequestRetryConfig()});try{const e=await n.clone().json();if(null==e)throw new Error("No roster data returned");return new J.j(e.id,e.assignedSensitivityLabel,e["@odata.etag"])}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async createGroupConversationThreadAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["groupId"]);if(null!==t)return Promise.reject(t);const r=`${this._baseUrl}groups/${e.groupId}/conversations`,n=e.newPost.toGraphSerializable(),i={topic:e.threadSubject.substring(0,200),threads:[{posts:[n]}]},o=await this.ajaxClient.executeRequest(r,{method:a.PJ.Post,body:JSON.stringify(i),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createGroupConversationThreadAsync")});try{const e=await o.clone().json();if(null==e?.threads?.[0]?.id)throw new Error("No post response returned");return n.createdDateTime=ce()().toDate().toISOString(),F.L.builder.fromGraphPostResource(n,e.threads[0].id).withLocallyUniqueId().build()}catch(l){return Promise.reject(pe.g.generateAjaxClientError(o,l))}}async postReplyInGroupConversationThreadAsync(e){const t=pe.g.validateAjaxClientRequestParameters(e,["groupId","threadId"]);if(null!==t)return Promise.reject(t);const r=`${this._baseUrl}groups/${e.groupId}/threads/${e.threadId}/reply`,n=e.newPost.toGraphSerializable();n.createdDateTime=ce()().toDate().toISOString();const i=h()(n.from);n.from=void 0,n.categories=void 0;const o={post:n};await this.ajaxClient.executeRequest(r,{method:a.PJ.Post,headers:{[s.Lr.ContentType]:s.Mq.Json},body:JSON.stringify(o),telemetryConfig:this.getDefaultRequestTelemetryConfig("PostReplyInGroupConversationThreadAsync")});const l=h()(n);return l.from=i,F.L.builder.fromGraphPostResource(l,e.threadId).withLocallyUniqueId().build()}joinGroupAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}leaveGroupAsync(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}trackExperimentEvent(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}logNotificationTelemetry(e){return Promise.reject(pe.g.generateAjaxClientError(fe.notImplementedResponse,fe.notImplemented))}async createUploadSession(e){const t=pe.g.validateAjaxClientRequestParameters(e,["groupId","itemPath"]);if(null!==t)return Promise.reject(t);const r=`${this._baseUrl}groups('${e.groupId}')/drive/root:/${encodeURIComponent(e.itemPath)}:/createUploadSession`,n=await this.ajaxClient.executeRequest(r,{method:a.PJ.Post,body:JSON.stringify({item:{"@microsoft.graph.conflictBehavior":"rename"}}),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("createUploadSessionAsync")});try{const t=await n.clone().json();if(null==t)throw new Error("No response returned");return e.session=e.session.setProperty("uploadUrl",t.uploadUrl),e.session=e.session.setProperty("bytesSent",0),e.session=e.session.setProperty("expirationDateTime",t.expirationDateTime),e.session}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async uploadBytesToSession(e){const t=e.uploadSession.uploadUrl,r=(0,he.FI)(e.b64Data),n=await this.ajaxClient.executeRequest(t,{method:a.PJ.Put,headers:{[s.Lr.ContentRange]:(0,he.X7)(e.initialByteIndex,e.finalByteIndex,e.totalSize),[s.Lr.ContentType]:s.Mq.OctetStream},body:r,telemetryConfig:this.getDefaultRequestTelemetryConfig("uploadBytesToSessionAsync")});try{const t=await n.clone().json();if(null==t)throw new Error("No response returned");let r=null;A()(t.id)||(r=t.id);let a=null;A()(t.name)||(a=t.name);let s=null;null!=t.size&&(s=t.size);let i=e.uploadSession.expirationDateTime;null!=t.expirationDateTime&&(i=t.expirationDateTime);return o.z.builder.withPropertyBag({bytesSent:e.finalByteIndex+1,expirationDateTime:i,groupId:e.uploadSession.groupId,id:e.uploadSession.id??ge.o.generate(),itemId:r&&r!==e.uploadSession.itemId?r:e.uploadSession.itemId,itemName:a&&a!==e.uploadSession.itemName?a:e.uploadSession.itemName??"",itemSize:s&&s!==e.uploadSession.itemSize?s:e.uploadSession.itemSize??0,lastUploadRequestSucceeded:!0,uploadUrl:e.uploadSession.uploadUrl,name:e.uploadSession.name,webUrl:t.webUrl,nextExpectedRanges:t.nextExpectedRanges}).build()}catch(i){return Promise.reject(pe.g.generateAjaxClientError(n,i))}}async addUserToGroupMembers(e){const t=`${this._baseUrl}groups/${e.container.externalId}/members/$ref`,r={"@odata.id":`https://${i.B.clientSettings.graphHostName}/${this.v1BaseUrl}users/${e.userId}`};await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},telemetryConfig:this.getDefaultRequestTelemetryConfig("addUserToGroupMembers")})}async addUserToPlannerRosterMembers(e){const t=`${this.betaBaseUrl}planner/rosters/${e.container.externalId}/members`,r={"@odata.type":k.U.PlannerRosterMember,userId:e.userId};await this.ajaxClient.executeRequest(t,{method:a.PJ.Post,telemetryConfig:this.getDefaultRequestTelemetryConfig("addUserToPlannerRosterMembers"),body:JSON.stringify(r),headers:{[s.Lr.ContentType]:s.Mq.Json},retryConfig:this.getTaskServiceRequestRetryConfig({maxRetryCount:0})})}getDefaultRequestTelemetryConfig(e){return{apiName:fe.apiName,methodName:e,requestHeadersToLog:this.loggableRequestHeaders,responseHeadersToLog:this.loggableResponseHeaders}}getTaskServiceRequestRetryConfig(e){const t={retryCheck:i.B.isUnoContext&&i.B.clientSettings.Flights.EnablePlannerServicePatchRetries?this.taskServiceRetryCheckCallback:void 0};return ae()(t,e)}constructor(){super(...arguments),this.loggableRequestHeaders=[s.a8.ClientRequestId],this.loggableResponseHeaders=[s.Qu.RequestId,s.Qu.ClientRequestId,s.Qu.TCorrelationId],this.unifiedGroupTemplateId="62375ab9-6b52-47ed-826b-58e47e0e304b",this.unifiedGroupDisplayName="Group.Unified",this.taskServiceRetryCheckCallback=async(e,t,r)=>{const n=[a.PJ.Patch,a.PJ.Put];return((0,ye.g)(e)||null!=e.method&&n.includes(e.method.toUpperCase()))&&pe.g.isRetryableResponse(t,r)}}}fe.notImplemented="Not Implemented",fe.notImplementedResponse=new Response(fe.notImplemented,{status:501,statusText:fe.notImplemented}),fe.apiName="TaskServiceGraphOdataApi"},26796:(e,t,r)=>{r.d(t,{z:()=>s});var n=r(57718),a=function(){function e(){this.bytesSent=0,this.groupId="",this.id=n.cM(),this.itemName="",this.itemSize=0,this.itemId="",this.lastUploadRequestSucceeded=!1,this.uploadUrl="",this.name="",this.webUrl="",this.nextExpectedRanges=void 0}return e.prototype.build=function(){return new s(this)},e.prototype.withPropertyBag=function(e){return this.bytesSent=e.bytesSent||this.bytesSent,this.expirationDateTime=e.expirationDateTime||this.expirationDateTime,this.groupId=e.groupId||this.groupId,this.id=e.id||this.id,this.itemId=e.itemId||this.itemId,this.itemName=e.itemName||this.itemName,this.itemSize=e.itemSize||this.itemSize,this.lastUploadRequestSucceeded=null!=e.lastUploadRequestSucceeded?e.lastUploadRequestSucceeded:this.lastUploadRequestSucceeded,this.uploadUrl=e.uploadUrl||this.uploadUrl,this.name=e.name||this.name,this.webUrl=e.webUrl||this.webUrl,this.nextExpectedRanges=e.nextExpectedRanges||this.nextExpectedRanges,this},e.prototype.withDefaultValues=function(){return this.id="DriveItemUploadSessionId",this.bytesSent=0,this.groupId="GroupId",this.itemId="itemId",this.itemName="sampleFile.txt",this.itemSize=28,this.uploadUrl="UploadURL",this.name="sampleFile.txt",this.expirationDateTime=new Date("2020-09-02"),this.webUrl="https://contoso.com/sites/group/sampleFile.txt",this.nextExpectedRanges=["26-"],this},e}(),s=function(){function e(e){this.bytesSent=e.bytesSent,this.expirationDateTime=e.expirationDateTime,this.groupId=e.groupId,this.id=e.id,this.itemId=e.itemId,this.itemName=e.itemName,this.itemSize=e.itemSize,this.lastUploadRequestSucceeded=e.lastUploadRequestSucceeded,this.uploadUrl=e.uploadUrl,this.name=e.name,this.webUrl=e.webUrl,this.nextExpectedRanges=e.nextExpectedRanges}return Object.defineProperty(e,"builder",{get:function(){return new a},enumerable:!1,configurable:!0}),e.prototype.getClone=function(){return e.builder.withPropertyBag({bytesSent:this.bytesSent,expirationDateTime:this.expirationDateTime,groupId:this.groupId,id:this.id,itemId:this.itemId,itemName:this.itemName||"",itemSize:this.itemSize||0,lastUploadRequestSucceeded:this.lastUploadRequestSucceeded,uploadUrl:this.uploadUrl,name:this.name,webUrl:this.webUrl,nextExpectedRanges:this.nextExpectedRanges}).build()},e.prototype.setProperty=function(e,t){if("id"===e)throw new Error("ReadOnlyException: "+e);var r=this.getClone();return r[e]=t,r},e}()},33287:(e,t,r)=>{r.d(t,{a:()=>s});var n=r(8403);class a{build(){return new s(this)}fromBucketEntityGroupResource(e){return this.withPropertyBag({bucket:n.f.builder.fromWebResource(e.Bucket).build()})}fromGraphBucketResourceTypes(e){return this.withPropertyBag({bucket:n.f.builder.fromGraphResource(e).build()})}withPropertyBag(e){return this.bucket=e.bucket||this.bucket,this}withBucket(e){return this.bucket=e,this}withDefaultValues(){return this.withPropertyBag({bucket:n.f.builder.build()})}}class s{static get builder(){return new a}get id(){return this.bucket.id}toWebSerializable(){return{Bucket:this.bucket.toWebSerializable()}}constructor(e){this.bucket=e.bucket}}},37535:(e,t,r)=>{var n;r.d(t,{P:()=>n}),function(e){e[e.Conversations=0]="Conversations",e[e.Calendar=1]="Calendar",e[e.People=2]="People",e[e.Documents=3]="Documents",e[e.Notebook=4]="Notebook",e[e.Yammer=5]="Yammer"}(n||(n={}))},44430:(e,t,r)=>{var n;r.d(t,{N:()=>n}),function(e){e[e.NonMember=0]="NonMember",e[e.Member=1]="Member",e[e.Owner=2]="Owner"}(n||(n={}))},52416:(e,t,r)=>{async function n(e){return new Promise(t=>setTimeout(t,e))}r.d(t,{y:()=>n})},53443:(e,t,r)=>{var n;r.d(t,{U:()=>n}),function(e){e[e.Insert=0]="Insert",e[e.Delete=1]="Delete",e[e.Update=2]="Update",e[e.Purge=3]="Purge",e[e.Undelete=4]="Undelete"}(n||(n={}))},77265:(e,t,r)=>{r.d(t,{j:()=>s});var n=r(65818),a=r(64836);class s extends a.m{constructor(e,t,r){super({externalId:e,containerType:n.K.Roster}),this.assignedSensitivityLabel=t,this.itemVersion=r}}},88457:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(65818),a=r(64836);class s extends a.m{constructor(e,t,r){super({externalId:e,containerType:n.K.Group},t.displayName),this.unifiedGroup=t,this.unifiedGroupDetails=r}}}}]);
//# sourceMappingURL=tsgraphodataapi.f4cb8c96.chunk.js.map