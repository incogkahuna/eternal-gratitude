"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[83479],{4576:(e,t,s)=>{s.d(t,{o:()=>n});var r=s(75992);class n extends r.r{constructor(e){super(n.actionType),this.tenantFeedbackSettings=e}}n.actionType="PLW_GET_TENANTFEEDBACKSETTINGS_SUCCEEDED"},43068:(e,t,s)=>{s.d(t,{Q:()=>n});var r=s(75992);class n extends r.r{constructor(e){super(n.actionType),this.tenantGroupSettings=e}}n.actionType="PLW_GET_TENANTGROUPSETTINGS_SUCCEEDED"},60762:(e,t,s)=>{s.r(t),s.d(t,{TenantModule:()=>u});var r=s(92296),n=s(4576),o=s(80332),a=s(43068),c=s(61724),i=s(38752),g=s(64805),h=s(74844),d=s(82841);class u extends g.J{get name(){return"TenantModule"}async fetchHasProjectCogs(){const e=this.stores.userStore.getHasProjectCogs();if(null!=e)return Promise.resolve(e);const t=this.stores.appContextStore.getFlights();if(!t.EnableTryProjectFeature||!t.EnableImportPlanForProjectUsers)return Promise.reject("ProjectModule.fetchHasProjectCogs: unsupported scenario.");this.loggers.traceLogger.logTrace(508073883,h.k.Verbose,"Get Project COGS Status");try{const e=await this.webApiProviders.projectService(),t=await e.getHasProjectCogs();return this.loggers.traceLogger.logTrace(508073882,h.k.Verbose,"Get Project COGS Status - Success"),this.dispatcher.dispatchAction(new c.x(t)),t}catch(s){const e=s;return this.loggers.traceLogger.logTrace(508073881,h.k.Warning,`Get Project COGS Status - Failure ${(0,d.s8)(e)}`),Promise.reject(e)}}async fetchTenantFeedbackSettingsAsync(){this.loggers.traceLogger.logTrace(508073880,h.k.Verbose,`Fetching tenant's feedback settings [TenantId=${i.B.tenantId}]`);const e=this.stores.tenantStore.getCurrentTenantFeedbackSettings();if(null!=e)return this.loggers.traceLogger.logTrace(508073879,h.k.Verbose,`Fetching tenant's feedback settings - Cache Hit [TenantId=${i.B.tenantId}]`),Promise.resolve(e);try{const e=await this.webApiProviders.ocps(),t=await e.getTenantFeedbackSettingsAsync();return this.loggers.traceLogger.logTrace(508073878,h.k.Verbose,`Fetching tenant's feedback settings - Success [TenantId=${i.B.tenantId}]`),this.dispatcher.dispatchAction(new n.o(t)),t}catch(t){throw this.loggers.traceLogger.logTrace(508073877,h.k.Warning,`Fetching tenant's feedback settings - Failure [TenantId=${i.B.tenantId}]${(0,d.s8)(t)}`),this.dispatcher.dispatchAction(new r.E(t.response,t.response?.statusText,t.error?.message)),new Error(t)}}async fetchTenantGroupSettingsAsync(){this.loggers.traceLogger.logTrace(508073876,h.k.Verbose,`Fetching tenant's group settings [TenantId=${i.B.tenantId}]`);const e=this.stores.tenantStore.getCurrentTenantGroupSettings();if(null!=e)return this.loggers.traceLogger.logTrace(508073875,h.k.Verbose,`Fetching tenant's group settings - Cache Hit [TenantId=${i.B.tenantId}]`),e;try{const e=await this.webApiProviders.taskService(),t=await e.getTenantGroupSettingsAsync();return this.loggers.traceLogger.logTrace(508073874,h.k.Verbose,`Fetching tenant's group settings - Success [TenantId=${i.B.tenantId}]`),this.dispatcher.dispatchAction(new a.Q(t)),t}catch(t){const e=t;return this.loggers.traceLogger.logTrace(508073873,h.k.Warning,`Fetching tenant's group settings - Failure [TenantId=${i.B.tenantId}]${(0,d.s8)(e)}`),this.dispatcher.dispatchAction(new o.a(e.response,e.response?.statusText??"",e.error?.message??"")),Promise.reject(e)}}}},64805:(e,t,s)=>{s.d(t,{J:()=>n});class r{get clientSettings(){return this.clientSettingsProvider()}constructor(e,t,s){this.dispatcher=e,this.clientSettingsProvider=t,this.loggers=s}}class n extends r{getCurrentViewIds(){const e=this.stores.appContextStore.getCurrentViewId();return e?[e]:void 0}constructor(e,t,s,r,n){super(e,r,n),this.webApiProviders=t,this.stores=s}}},80332:(e,t,s)=>{s.d(t,{a:()=>n});var r=s(32512);class n extends r.v{constructor(e,t,s){super(n.actionType,e,t,s)}}n.actionType="PLW_GET_TENANTGROUPSETTINGS_FAILED"},92296:(e,t,s)=>{s.d(t,{E:()=>n});var r=s(32512);class n extends r.v{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";super(n.actionType,e,t,s)}}n.actionType="PLW_GET_TENANTFEEDBACKSETTINGS_FAILED"}}]);
//# sourceMappingURL=tenantmodule.fc731691.chunk.js.map