"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[19411],{8403:(e,t,i)=>{i.d(t,{f:()=>v});var s=i(55491),r=i.n(s),n=i(42410),a=i(72761);class o{static fromResource(e){return new o(e.contextScenarioId,e.externalContextId,e.externalObjectId,e.ownerAppId)}toGraphSerializable(){return{contextScenarioId:this.contextScenarioId,externalContextId:this.externalContextId,externalObjectId:this.externalObjectId,ownerAppId:this.ownerAppId}}constructor(e,t,i,s){this.externalObjectId=i,this.externalContextId=t,this.contextScenarioId=e,this.ownerAppId=s}}class u{toGraphSerializable(){const e={};return this.external&&(e.external=this.external.toGraphSerializable()),e}constructor(e){null!=e.external&&(this.external=o.fromResource(e.external))}}var l=i(41740),c=i.n(l),d=i(91246);class p{build(){return new v(this)}newFromDifferentialUpdate(e){if(e.entityType!==a.I.Bucket)throw new Error("ArgumentException: invalid entity");const t=v.builder.withPropertyBag({id:e.id,itemVersion:e.itemVersion,planId:"",title:""}).build(),i=e.getCreateDiffData(),s=t.applyDiffs(i);return this.forClone(s)}forClone(e){return this.withPropertyBag({id:e.id,itemVersion:e.itemVersion,title:e.title,planId:e.planId,orderHint:e.orderHint,creationSource:c()(e.creationSource)??new u({})})}fromWebResource(e){return this.withPropertyBag({id:e.Id,itemVersion:null!=e.ItemVersion?e.ItemVersion.toString():void 0,orderHint:e.OrderHint,planId:e.PlanId,title:e.Title,creationSource:e.creationSource?new u(e.creationSource):void 0})}fromGraphResource(e){return this.withPropertyBag({itemVersion:e["@odata.etag"],title:e.name,planId:e.planId||"",orderHint:e.orderHint,id:e.id,creationSource:e.creationSource?new u(e.creationSource):void 0})}withPropertyBag(e){return this.id=e.id,this.itemVersion=e.itemVersion||this.itemVersion,this.orderHint=e.orderHint||this.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource||this.creationSource,this}withLocallyUniqueId(){return this.id=d.o.generate(),this}getDiffDataFromWebResource(e,t){const i=new n.F;i.addMapping("Title","title"),i.addMapping("OrderHint","orderHint"),i.addMapping("PlanId","planId"),i.addMapping("creationSource","creationSource");const s={};return r()(e.Changes,e=>{const t=e.FieldName;switch(t){case"OrderHint":case"PlanId":case"Title":const r=i.getMappedClientKey(t);s[r]=i.translateValue(t,r,e.Value)}}),s}getDiffDataFromGraphResource(e,t){const i=new n.F;return i.addMapping("name","title"),i.addMapping("orderHint","orderHint"),i.addMapping("planId","planId"),i.addMapping("creationSource","creationSource"),i.translate(e)}withValidData(){return this.id=d.o.generate(),this.itemVersion="1",this.title="Test bucket",this.planId=d.o.generate(),this.orderHint=" !",this}constructor(){this.id=d.o.generate(),this.title="",this.planId=d.o.generate(),this.itemVersion="",this.orderHint=" !",this.creationSource=new u({})}}var h=i(88908),P=i(17002),y=i.n(P),R=i(54320),m=i.n(R),S=i(36777),q=i.n(S),A=i(679);class v extends h.W{static get builder(){return new p}get entityType(){return a.I.Bucket}toWebSerializable(){return{Id:this.id,ItemVersion:null!=this.itemVersion?parseInt(this.itemVersion,10):null,OrderHint:this.orderHint,PlanId:this.planId,Title:this.title,creationSource:this.creationSource.toGraphSerializable()}}toGraphSerializable(){const e=this.creationSource.toGraphSerializable();return{id:this.id,"@odata.etag":this.itemVersion,orderHint:this.orderHint,planId:this.planId,name:this.title,creationSource:m()(e)?void 0:e}}setProperty(e,t){if("id"===e||"itemVersion"===e||"planId"===e||"creationSource"===e)throw new Error("ReadOnlyException: "+e);const i=this.getClone();return i[e]=t,i}getDiff(e){return A.B.getDiff(this,e,A.B.getDiffMomentCustomizer)}applyDiffs(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(!y()(t,e=>null!=e))throw new Error("ArgumentException: diffs - Diffs array contains null elements");return t.length>0?q()(v.builder.build(),this,...t,A.B.applyDiffMomentCustomizer):this}applyDifferentialUpdate(e){if(e.id!==this.id)throw new Error("ArgumentException: update.id must match this.id");const t=e.getUpdateDiffData(this);return this.applyDiffs(t)}getClone(){return this.getCloneBuilder().build()}getCloneBuilder(){return v.builder.forClone(this)}constructor(e){super(e.id,e.itemVersion),this.orderHint=e.orderHint,this.planId=e.planId,this.title=e.title,this.creationSource=e.creationSource}}v.TitleMaxLength=256},9575:(e,t,i)=>{i.d(t,{z:()=>n});var s=i(38921),r=i(68552);class n extends r.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for UpdateRequest")}constructor(e,t,i,s,n){super(e,t,i,s,r.Y.Update,n)}}},13892:(e,t,i)=>{i.r(t),i.d(t,{GatedTaskServiceApi:()=>L});var s=i(39287);class r extends s.k{updateRequestParams(e,t){this.requestParams.taskId=t,this.entityId=r.RequestPrefix+t}constructor(e,t,i,s,n){super(r.RequestPrefix+e,t,i,s,n)}}r.RequestPrefix="GET_TASK_ENTITY_SET";var n=i(43649);class a extends n.b{updateRequestParams(e,t){this.requestParams.bucketId=t,this.entityId=a.RequestPrefix+t}constructor(e,t,i,s,r){super(a.RequestPrefix+e,t,i,s,r)}}a.RequestPrefix="DELETE_BUCKET";class o extends n.b{updateRequestParams(e,t){this.requestParams.planId=t,this.entityId=o.RequestPrefix+t}constructor(e,t,i,s,r){super(o.RequestPrefix+e,t,i,s,r)}}o.RequestPrefix="DELETE_PLAN";class u extends n.b{updateRequestParams(e,t){this.requestParams.groupId=t,this.entityId=u.RequestPrefix+t}constructor(e,t,i,s,r){super(u.RequestPrefix+e,t,i,s,r)}}u.RequestPrefix="DELETE_GROUP";class l extends n.b{updateRequestParams(e,t){this.requestParams.taskId=t,this.entityId=l.RequestPrefix+t}constructor(e,t,i,s,r){super(l.RequestPrefix+e,t,i,s,r)}}l.RequestPrefix="DELETE_TASK";var c=i(88636);class d extends c.E{extractNewEntityId(e){return e.id}constructor(e,t,i,s,r){super(d.RequestPrefix+e,t,i,s,r)}}d.RequestPrefix="CREATE_GROUP";var p=i(92970),h=i(87596);class P extends h.x{updateRequestParams(e,t){this.entityId=P.RequestPrefix+t;const i=this.requestParams.originalGroup.toWebSerializable();i.Id=t,this.requestParams.originalGroup=p.E.builder.fromUnifiedGroupResource(i).build();const s=this.requestParams.updatedGroup.toWebSerializable();s.Id=t,this.requestParams.updatedGroup=p.E.builder.fromUnifiedGroupResource(s).build()}constructor(e,t,i,s,r){super(P.RequestPrefix+e,t,i,s,r)}}P.RequestPrefix="UPDATE_UNIFIED_GROUP";class y extends h.x{updateRequestParams(e,t){this.entityId=y.RequestPrefix+t,this.requestParams.groupId=t}constructor(e,t,i,s,r){super(y.RequestPrefix+e,t,i,s,r)}}y.RequestPrefix="UPDATE_GROUP_FAVORITE";class R extends h.x{updateRequestParams(e,t){this.entityId=R.RequestPrefix+t,this.requestParams.groupId=t}constructor(e,t,i,s,r){super(R.RequestPrefix+e,t,i,s,r)}}R.RequestPrefix="UPDATE_GROUP_SUBSCRIPTION";class m extends h.x{updateRequestParams(e,t){this.entityId=m.RequestPrefix+t,this.requestParams.groupId=t}constructor(e,t,i,s,r){super(m.RequestPrefix+e,t,i,s,r)}}m.RequestPrefix="JOIN_GROUP";class S extends h.x{updateRequestParams(e,t){this.entityId=S.RequestPrefix+t,this.requestParams.groupId=t}constructor(e,t,i,s,r){super(S.RequestPrefix+e,t,i,s,r)}}S.RequestPrefix="LEAVE_GROUP";class q extends c.E{extractNewEntityId(e){return e.plan.id}constructor(e,t,i,s,r){super(q.RequestPrefix+e,t,i,s,r)}}q.RequestPrefix="CREATE_PLAN";var A=i(40468);class v extends h.x{updateRequestParams(e,t){this.entityId=v.RequestPrefix+t;const i=this.requestParams.originalPlanEntitySet.toWebSerializable(),s=this.requestParams.updatedPlanEntitySet.toWebSerializable();null!=i.Plan&&(i.Plan.Id=t),null!=s.Plan&&(s.Plan.Id=t),null!=i.Details&&(i.Details.Id=t),null!=s.Details&&(s.Details.Id=t),this.requestParams.originalPlanEntitySet=A.T.builder.fromPlanEntityGroupResource(i).build(),this.requestParams.updatedPlanEntitySet=A.T.builder.fromPlanEntityGroupResource(s).build()}constructor(e,t,i,s,r){super(v.RequestPrefix+e,t,i,s,r)}}v.RequestPrefix="UPDATE_PLAN";class b extends h.x{updateRequestParams(e,t){this.entityId=b.RequestPrefix+t,this.requestParams.planId=t}constructor(e,t,i,s,r){super(b.RequestPrefix+e,t,i,s,r)}}b.RequestPrefix="COPY_PLAN";class k extends c.E{extractNewEntityId(e){return e.id}constructor(e,t,i,s,r){super(k.RequestPrefix+e,t,i,s,r)}}k.RequestPrefix="CREATE_BUCKET";var f=i(8403);class w extends h.x{updateRequestParams(e,t){this.entityId=w.RequestPrefix+t;const i=this.requestParams.originalBucket.toWebSerializable();i.Id=t,this.requestParams.originalBucket=f.f.builder.fromWebResource(i).build();const s=this.requestParams.updatedBucket.toWebSerializable();s.Id=t,this.requestParams.updatedBucket=f.f.builder.fromWebResource(s).build()}constructor(e,t,i,s,r){super(w.RequestPrefix+e,t,i,s,r)}}w.RequestPrefix="UPDATE_BUCKET";var E=i(80708);class I extends c.E{extractNewEntityId(e){return e.id}updateRequestParams(e,t){0!==e.indexOf(k.RequestPrefix)?0!==e.indexOf(q.RequestPrefix)?super.updateRequestParams(e,t):this.updatePlanIdOnRequestParameters(t):this.updateBucketIdOnRequestParameters(t)}updatePlanIdOnRequestParameters(e){const{newTaskEntitySet:t}=this.requestParams;this.requestParams.newTaskEntitySet=E.F.builder.withTask(t.task.setProperty("planId",e)).withDetails(t.taskDetails).withFormatData(t.taskFormatData).build()}updateBucketIdOnRequestParameters(e){const{newTaskEntitySet:t}=this.requestParams;this.requestParams.newTaskEntitySet=E.F.builder.withTask(t.task.setProperty("bucketId",e)).withDetails(t.taskDetails).withFormatData(t.taskFormatData).build()}constructor(e,t,i,s,r){super(I.RequestPrefix+e,t,i,s,r)}}I.RequestPrefix="CREATE_TASK";class g extends h.x{updateRequestParams(e,t){if(0===e.indexOf(k.RequestPrefix))return void this.updateBucketIdOnRequestParameters(t);if(0===e.indexOf(q.RequestPrefix))return void this.updatePlanIdOnRequestParameters(t);this.entityId=g.RequestPrefix+t;const i=this.requestParams.originalTaskEntitySet,s=this.requestParams.updatedTaskEntitySet;this.requestParams.originalTaskEntitySet=E.F.builder.forClone(i).withId(t).build(),this.requestParams.updatedTaskEntitySet=E.F.builder.forClone(s).withId(t).build()}updatePlanIdOnRequestParameters(e){const{updatedTaskEntitySet:t}=this.requestParams;null!=t.task&&(this.requestParams.updatedTaskEntitySet=E.F.builder.withTask(t.task.setProperty("planId",e)).withDetails(t.taskDetails).withFormatData(t.taskFormatData).build())}updateBucketIdOnRequestParameters(e){const{updatedTaskEntitySet:t}=this.requestParams;null!=t.task&&(this.requestParams.updatedTaskEntitySet=E.F.builder.withTask(t.task.setProperty("bucketId",e)).withDetails(t.taskDetails).withFormatData(t.taskFormatData).build())}constructor(e,t,i,s,r){super(g.RequestPrefix+e,t,i,s,r)}}g.RequestPrefix="UPDATE_TASK";var T=i(94078);class x extends h.x{updateRequestParams(e,t){this.entityId=x.RequestPrefix+t;const i=this.requestParams.originalUserDetails.toWebSerializable();i.Id=t,this.requestParams.originalUserDetails=T.I.builder.fromWebResource(i).build();const s=this.requestParams.updatedUserDetails.toWebSerializable();s.Id=t,this.requestParams.updatedUserDetails=T.I.builder.fromWebResource(s).build()}constructor(e,t,i,s,r){super(x.RequestPrefix+e,t,i,s,r)}}x.RequestPrefix="UPDATE_USER_DETAILS";class _ extends h.x{updateRequestParams(e,t){this.requestParams.taskId=t,this.entityId=_.RequestPrefix+t}constructor(e,t,i,s,r){super(_.RequestPrefix+e,t,i,s,r)}}_.RequestPrefix="UNDELETE_TASK";var N=i(18113);class C extends c.E{extractNewEntityId(e){return e.externalId}constructor(e,t,i,s,r){let{resolve:n,reject:a}=s;super(C.RequestPrefix+e,t,i,{resolve:n,reject:a},r)}}C.RequestPrefix="CREATE_PLANNER_ROSTER";var G=i(19853),D=i.n(G),U=i(98502),O=i(91246);class L{getAugmentationLoopToken(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((e,t)=>{const r=new s.k("GET_AUGMENTATIONLOOP_TOKEN",this.taskServiceApi.getAugmentationLoopToken.bind(this.taskServiceApi),{},{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(r,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getUnifiedGroupSensitivityLabelAsync(e,t,i,r){const n=null==r?N.Q.Priority1:r;return new Promise((r,a)=>{const o=new s.k("GET_UNIFIED_GROUP_SENSITIVITY_LABEL"+e.groupId,this.taskServiceApi.getUnifiedGroupSensitivityLabelAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getRosterContainerAsync(e,t,i,r){const n=null==r?N.Q.Priority1:r;return new Promise((r,a)=>{const o=new s.k("GET_ROSTER_CONTAINER"+e.containerId,this.taskServiceApi.getRosterContainerAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getUnifiedGroupDetailsAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_UNIFIED_GROUP_DETAILS"+e.groupId,this.taskServiceApi.getUnifiedGroupDetailsAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getJoinedGroupsAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_JOINED_GROUPS",this.taskServiceApi.getJoinedGroupsAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getFavoritePlansForUserAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_FAVORITE_PLANS_FOR_USER",this.taskServiceApi.getFavoritePlansForUserAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getRecentPlansForUserAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_RECENT_PLANS_FOR_USER",this.taskServiceApi.getRecentPlansForUserAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getRecommendedDocumentPlansForUserAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((t,i)=>{const r=new s.k("GET_RECOMMENDED_DOCUMENT_PLANS_FOR_USER",this.taskServiceApi.getRecommendedDocumentPlansForUserAsync.bind(this.taskServiceApi),e,{resolve:t,reject:i},[]);this.requestPrioritizer.handleRequest(r,n,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getAllDocumentPlansForUserAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((t,i)=>{const r=new s.k("GET_ALL_DOCUMENT_PLANS_FOR_USER",this.taskServiceApi.getAllDocumentPlansForUserAsync.bind(this.taskServiceApi),e,{resolve:t,reject:i},[]);this.requestPrioritizer.handleRequest(r,n,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getContainersAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_CONTAINERS_OF_CONTAINER_TYPE"+e.containerType,this.taskServiceApi.getContainersAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getPlansForGroupAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_PLANS_FOR_GROUP"+e.groupId,this.taskServiceApi.getPlansForGroupAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}resolveGroupsToPlansBatchedAsync(e,t,i){const r=U.g.validateAjaxClientRequestParameters(e,["groupIds"]);if(null!==r)return Promise.reject(r);const n=null==i?N.Q.Priority5:i;return new Promise((t,i)=>{const r=new s.k("RESOLVE_GROUPS_TO_PLANS_BATCHED",this.taskServiceApi.resolveGroupsToPlansBatchedAsync.bind(this.taskServiceApi),e,{resolve:t,reject:i},[]);this.requestPrioritizer.handleRequest(r,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,void 0)})}resolveContainerIdsToPlansBatchedAsync(e,t,i,r){const n=U.g.validateAjaxClientRequestParameters(e,["containerIds"]);if(null!==n)return Promise.reject(n);const a=null==r?N.Q.Priority5:r;return new Promise((r,n)=>{const o=new s.k("RESOLVE_CONTAINERS_TO_PLANS_BATCHED",this.taskServiceApi.resolveContainerIdsToPlansBatchedAsync.bind(this.taskServiceApi),e,{resolve:r,reject:n},[]);this.requestPrioritizer.handleRequest(o,a,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getPlanEntitySetAsync(e,t,i,r){const n=U.g.validateAjaxClientRequestParameters(e,["planId"]);if(null!==n)return Promise.reject(n);const a=null==r?N.Q.Priority5:r;return new Promise((r,n)=>{const o=new s.k("GET_PLAN_ENTITYSET"+e.planId,this.taskServiceApi.getPlanEntitySetAsync.bind(this.taskServiceApi),e,{resolve:r,reject:n},[]);this.requestPrioritizer.handleRequest(o,a,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getPlanEntitySetByExternalIdAsync(e,t,i,r){const n=U.g.validateAjaxClientRequestParameters(e,["contextScenarioId","externalObjectId"]);if(null!==n)return Promise.reject(n);const a=null==r?N.Q.Priority5:r;return new Promise((r,n)=>{const o=new s.k(`GET_PLAN_ENTITYSET_EXTERNALID-S-${e.contextScenarioId}-I-${e.externalObjectId}`,this.taskServiceApi.getPlanEntitySetByExternalIdAsync.bind(this.taskServiceApi),e,{resolve:r,reject:n},[]);this.requestPrioritizer.handleRequest(o,a,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getTaskEntitySetAsync(e,t,i,s){const n=null==s?N.Q.Priority5:s;return new Promise((s,a)=>{const o=new r(e.taskId,this.taskServiceApi.getTaskEntitySetAsync.bind(this.taskServiceApi),e,{resolve:s,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getTasksForPlanAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_TASKS_FOR_PLAN"+e.planId,this.taskServiceApi.getTasksForPlanAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getTasksAssignedToCurrentUserAsync(e,t,i){const r=null==i?N.Q.Priority5:i;return new Promise((i,n)=>{const a=new s.k("GET_TASKS_ASSIGNED_CURRENT_USER",this.taskServiceApi.getTasksAssignedToCurrentUserAsync.bind(this.taskServiceApi),e,{resolve:i,reject:n},[]);this.requestPrioritizer.handleRequest(a,r,this.duplicateRequestsComparator,this.duplicateRequestHandler,void 0,t)})}getBucketAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_BUCKET"+e.bucketId,this.taskServiceApi.getBucketAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getBucketsForPlanAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_BUCKETS_IN_PLAN"+e.planId,this.taskServiceApi.getBucketsForPlanAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getCurrentUserDetailsAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_CURRENT_USER_DETAILS",this.taskServiceApi.getCurrentUserDetailsAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getDiffSyncTokenAsync(e,t){const i=null==t?N.Q.Priority10:t;return new Promise((e,t)=>{const r=new s.k("GET_DIFF_SYNC_TOKEN",this.taskServiceApi.getDiffSyncTokenAsync.bind(this.taskServiceApi),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(r,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getDiffSyncFeedAsync(e,t){const i=null==t?N.Q.Priority10:t;return new Promise((t,r)=>{const n=new s.k("GET_DIFF_SYNC_FEED"+e.diffSyncToken,this.taskServiceApi.getDiffSyncFeedAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getFilteredTenantUsersByKeyword(e,t){const i=U.g.validateAjaxClientRequestParameters(e,["keyword"]);if(null!==i)return Promise.reject(i);const r=null==t?N.Q.Priority1:t;return new Promise((t,i)=>{const n=new s.k("FILTERED_TENANT_USERS_BY_KEYWORD",this.taskServiceApi.getFilteredTenantUsersByKeyword.bind(this.taskServiceApi),e,{resolve:t,reject:i},[]);this.requestPrioritizer.handleRequest(n,r,(e,t)=>e.entityId===t.entityId,(e,t)=>{const i=e.primaryRequest;return e.primaryRequest=t.primaryRequest,e.duplicateRequests.push(i),e})})}getSuiteNav(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_SUITE_NAV"+e.culture,this.taskServiceApi.getSuiteNav.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getLicensesForUser(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_LICENSES_FOR_USER"+e.userId,this.taskServiceApi.getLicensesForUser.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getTenantGroupSettingsAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((e,t)=>{const r=new s.k("GET_TENANT_GROUP_SETTINGS",this.taskServiceApi.getTenantGroupSettingsAsync.bind(this.taskServiceApi),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(r,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getSensitivityLabelsAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((e,t)=>{const r=new s.k("GET_SENSITIVITY_LABELS",this.taskServiceApi.getSensitivityLabelsAsync.bind(this.taskServiceApi),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(r,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getSensitivityPolicySettingsAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((e,t)=>{const r=new s.k("GET_SENSITIVITY_POLICY_SETTINGS",this.taskServiceApi.getSensitivityPolicySettingsAsync.bind(this.taskServiceApi),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(r,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getLatestBuild(e,t){const i=null==t?N.Q.Priority10:t;return new Promise((t,r)=>{const n=new s.k("GET_LATEST_BUILD",this.taskServiceApi.getLatestBuild.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getOperationStatusAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_OPERATION_STATUS",this.taskServiceApi.getOperationStatusAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getContainerPermissionsAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_CONTAINER_PERMISSIONS",this.taskServiceApi.getContainerPermissionsAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getTaskPermissionsAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_TASK_PERMISSIONS",this.taskServiceApi.getTaskPermissionsAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getUserRosterPlansAsync(e,t,i,r){const n=null==r?N.Q.Priority5:r;return new Promise((r,a)=>{const o=new s.k("GET_USER_ROSTER_PLANS",this.taskServiceApi.getUserRosterPlansAsync.bind(this.taskServiceApi),e,{resolve:r,reject:a},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,i)})}getFormResponseAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_FORM_RESPONSE",this.taskServiceApi.getFormResponseAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}getApprovalDetailsAsync(e,t){const i=null==t?N.Q.Priority5:t;return new Promise((t,r)=>{const n=new s.k("GET_APPROVAL_DETAILS",this.taskServiceApi.getApprovalDetailsAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i)})}deleteBucketAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new a(e.bucketId,this.taskServiceApi.deleteBucketAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}deletePlanAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new o(e.planId,this.taskServiceApi.deletePlanAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}deleteUnifiedGroupAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new u(e.groupId,this.taskServiceApi.deleteUnifiedGroupAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}deleteTaskAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new l(e.taskId,this.taskServiceApi.deleteTaskAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}cancelUploadSession(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new n.b("CANCEL_UPLOAD"+e.uploadSession.id,this.taskServiceApi.cancelUploadSession.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}cancelApproval(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new n.b("CANCEL_APPROVAL",this.taskServiceApi.cancelApproval.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}createPlannerRosterAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new C("CREATE_PLANNER_ROSTER",this.taskServiceApi.createPlannerRosterAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}createGroupAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new d(e.unifiedGroupInfo.id,this.taskServiceApi.createGroupAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[P.RequestPrefix+e.unifiedGroupInfo.id,u.RequestPrefix+e.unifiedGroupInfo.id,y.RequestPrefix+e.unifiedGroupInfo.id,R.RequestPrefix+e.unifiedGroupInfo.id,m.RequestPrefix+e.unifiedGroupInfo.id,S.RequestPrefix+e.unifiedGroupInfo.id]);this.requestPrioritizer.handleRequest(r,i)})}createPlanAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new q(e.newPlanEntitySet.id,this.taskServiceApi.createPlanAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[o.RequestPrefix+e.newPlanEntitySet.id,v.RequestPrefix+e.newPlanEntitySet.id]);this.requestPrioritizer.handleRequest(r,i)})}createApproval(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new c.E("CREATE_APPROVAL",this.taskServiceApi.createApproval.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}updateApproval(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new h.x("UPDATE_APPROVAL",this.taskServiceApi.updateApproval.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}copyPlanAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new b(e.planId,(e,t)=>this.taskServiceApi.copyPlanAsync(e,t),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}createBucketAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new k(e.bucketInfo.id,this.taskServiceApi.createBucketAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[w.RequestPrefix+e.bucketInfo.id,a.RequestPrefix+e.bucketInfo.id]);this.requestPrioritizer.handleRequest(r,i)})}createTaskAsync(e,t){const i=null==t?N.Q.Priority1:t,s=[g.RequestPrefix+e.newTaskEntitySet.id,l.RequestPrefix+e.newTaskEntitySet.id,r.RequestPrefix+e.newTaskEntitySet.id],n=e.newTaskEntitySet.task.bucketId??"";O.o.isPlexTempId(n)&&s.push(k.RequestPrefix+n);const a=e.newTaskEntitySet.task.planId??"";return O.o.isPlexTempId(a)&&s.push(q.RequestPrefix+a),new Promise((t,r)=>{const n=new I(e.newTaskEntitySet.id,this.taskServiceApi.createTaskAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},s);this.requestPrioritizer.handleRequest(n,i)})}updateBucketAsync(e,t,i){const s=null==i?N.Q.Priority1:i;return new Promise((i,r)=>{const n=new w(e.originalBucket.id,this.taskServiceApi.updateBucketAsync.bind(this.taskServiceApi),e,{resolve:i,reject:r},[w.RequestPrefix+e.originalBucket.id,a.RequestPrefix+e.originalBucket.id]);this.requestPrioritizer.handleRequest(n,s,void 0,void 0,void 0,void 0,t)})}updatePlanAsync(e,t,i){const s=null==i?N.Q.Priority1:i,r=e.originalPlanEntitySet.id&&"";return new Promise((i,n)=>{const a=new v(r,this.taskServiceApi.updatePlanAsync.bind(this.taskServiceApi),e,{resolve:i,reject:n},[v.RequestPrefix+r,o.RequestPrefix+r]);this.requestPrioritizer.handleRequest(a,s,void 0,void 0,void 0,void 0,t)})}updateTaskAsync(e,t,i){const s=null==i?N.Q.Priority1:i;let r="";null!=e.originalTaskEntitySet&&(r=e.originalTaskEntitySet.id);const n=[g.RequestPrefix+r,l.RequestPrefix+r],a=e.updatedTaskEntitySet.task?.bucketId??"";O.o.isPlexTempId(a)&&n.push(k.RequestPrefix+a);const o=e.updatedTaskEntitySet.task?.planId??"";return O.o.isPlexTempId(o)&&n.push(q.RequestPrefix+o),new Promise((i,a)=>{const o=new g(r,this.taskServiceApi.updateTaskAsync.bind(this.taskServiceApi),e,{resolve:i,reject:a},n);this.requestPrioritizer.handleRequest(o,s,void 0,void 0,void 0,void 0,t)})}undeleteTaskAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new _(e.taskId,this.taskServiceApi.undeleteTaskAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}updateUserDetailsAsync(e,t,i){const s=null==i?N.Q.Priority1:i;return new Promise((i,r)=>{const n=new x(e.originalUserDetails.id,this.taskServiceApi.updateUserDetailsAsync.bind(this.taskServiceApi),e,{resolve:i,reject:r},[x.RequestPrefix+e.originalUserDetails.id]);this.requestPrioritizer.handleRequest(n,s,void 0,void 0,void 0,void 0,t)})}updateUnifiedGroupAsync(e,t,i){const s=null==i?N.Q.Priority1:i;return new Promise((i,r)=>{const n=new P(e.originalGroup.id,this.taskServiceApi.updateUnifiedGroupAsync.bind(this.taskServiceApi),e,{resolve:i,reject:r},[P.RequestPrefix+e.originalGroup.id]);this.requestPrioritizer.handleRequest(n,s,void 0,void 0,void 0,void 0,t)})}addUserToContainer(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new h.x("ADD_USER_TO_CONTAINER"+e.container.externalId+e.userId,this.taskServiceApi.addUserToContainer.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}removeUserFromContainer(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new h.x("REMOVE_USER_FROM_CONTAINER"+e.container.externalId+e.userId,this.taskServiceApi.removeUserFromContainer.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}setRosterSensitivityLabelAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new h.x("SET_ROSTER_SENSITIVITY_LABLE"+e.rosterContainer,this.taskServiceApi.setRosterSensitivityLabelAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}createGroupConversationThreadAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new c.E("CREATE_CONV_THREAD"+e.groupId+e.newPost.id+e.threadSubject,this.taskServiceApi.createGroupConversationThreadAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}postReplyInGroupConversationThreadAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new c.E("REPLY_CONV_THREAD"+e.groupId+e.threadId,this.taskServiceApi.postReplyInGroupConversationThreadAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}joinGroupAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new m(e.groupId,this.taskServiceApi.joinGroupAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}leaveGroupAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new S(e.groupId,this.taskServiceApi.leaveGroupAsync.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}createUploadSession(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new c.E("CREATE_UPLOAD"+e.groupId+e.itemPath,this.taskServiceApi.createUploadSession.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}uploadBytesToSession(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,s)=>{const r=new h.x("UPLOAD_BYTES"+e.uploadSession.id,this.taskServiceApi.uploadBytesToSession.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}validateGroupNamesAsync(e,t){const i=null==t?N.Q.Priority1:t;return new Promise((t,r)=>{const n=new s.k("VALIDATE_GROUP_NAMES",this.taskServiceApi.validateGroupNamesAsync.bind(this.taskServiceApi),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,i,(e,t)=>e.entityId===t.entityId,(e,t)=>{const i=e.primaryRequest;return e.primaryRequest=t.primaryRequest,e.duplicateRequests.push(i),e})})}trackExperimentEvent(e,t){const i=null==t?N.Q.Priority10:t;return new Promise((t,s)=>{const r=new h.x("TRACK_"+e.eventKey,this.taskServiceApi.trackExperimentEvent.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}logNotificationTelemetry(e,t){const i=null==t?N.Q.Priority10:t;return new Promise((t,s)=>{const r=new h.x("LOG_NOTIFICATION_TELEMETRY",this.taskServiceApi.logNotificationTelemetry.bind(this.taskServiceApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(r,i)})}getAppContextSettings(e){const t=null==e?N.Q.Priority1:e;return new Promise((e,i)=>{const r=new s.k("GET_APP_CONTEXT_SETTINGS",this.taskServiceApi.getAppContextSettings.bind(this.taskServiceApi),void 0,{resolve:e,reject:i},[]);this.requestPrioritizer.handleRequest(r,t,this.duplicateRequestsComparator,this.duplicateRequestHandler)})}constructor(e,t){this.taskServiceApi=e,this.requestPrioritizer=t,this.duplicateRequestsComparator=(e,t)=>!(e.entityId!==t.entityId||e.requestType!==t.requestType||!D()(e.requestParams,t.requestParams)),this.duplicateRequestHandler=(e,t)=>(e.duplicateRequests.push(t.primaryRequest),null!=t.viewIds&&null!=e.viewIds?e.viewIds.push(...t.viewIds):e.viewIds=void 0,e)}}},39287:(e,t,i)=>{i.d(t,{k:()=>n});var s=i(38921),r=i(68552);class n extends r.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for PlannerReadRequest")}updateRequestParams(e,t){}constructor(e,t,i,s,n){super(e,t,i,s,r.Y.Update,n)}}},43649:(e,t,i)=>{i.d(t,{b:()=>a});var s=i(38921),r=i(68552);class n extends r.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for DeleteRequest")}constructor(e,t,i,s,n){super(e,t,i,s,r.Y.Delete,n)}}class a extends n{updateRequestParams(e,t){}constructor(e,t,i,s,r){super(e,t,i,s,r)}}},76241:(e,t,i)=>{var s;i.d(t,{X:()=>s}),function(e){e[e.Public=0]="Public",e[e.Private=1]="Private",e[e.HiddenMembership=2]="HiddenMembership"}(s||(s={}))},87596:(e,t,i)=>{i.d(t,{x:()=>r});var s=i(9575);class r extends s.z{updateRequestParams(e,t){}constructor(e,t,i,s,r){super(e,t,i,s,r)}}},88636:(e,t,i)=>{i.d(t,{E:()=>n});var s=i(68552);class r extends s.K{constructor(e,t,i,r,n){super(e,t,i,r,s.Y.Create,n)}}class n extends r{extractNewEntityId(e){return""}updateRequestParams(e,t){}constructor(e,t,i,s,r){super(e,t,i,s,r)}}},92970:(e,t,i)=>{i.d(t,{E:()=>R});var s=i(17002),r=i.n(s),n=i(54320),a=i.n(n),o=i(36777),u=i.n(o),l=i(76241),c=i(91246);class d{build(){return new R(this)}fromUnifiedGroupResource(e){let t;switch(e.Visibility?.toLowerCase()??""){case"private":t=l.X.Private;break;case"hiddenmembership":t=l.X.HiddenMembership;break;default:t=l.X.Public}return this.withPropertyBag({assignedSensitivityLabelId:e.assignedSensitivityLabelId,autoSubscribeNewMembers:e.AutoSubscribeNewMembers,classification:e.Classification,description:e.Description,displayName:e.DisplayName,id:e.Id,imageSource:e.ImageSource,mail:e.Mail,mailNickname:e.MailNickname,visibility:t})}fromGraphResource(e){let t;switch(e.visibility?.toLowerCase()??""){case"hiddenmembership":t=l.X.HiddenMembership;break;case"private":t=l.X.Private;break;default:t=l.X.Public}return this.withPropertyBag({assignedSensitivityLabelId:null!=e.assignedLabels?.[0]?e.assignedLabels[0].labelId:"",autoSubscribeNewMembers:e.autoSubscribeNewMembers,classification:e.classification,description:e.description,displayName:e.displayName,id:e.id,imageSource:void 0,mail:e.mail,mailNickname:e.mailNickname,visibility:t})}withPropertyBag(e){if(null==l.X[e.visibility])throw new Error("InvalidArgumentException: propertyBag.visibility");return this.assignedSensitivityLabelId=e.assignedSensitivityLabelId??"",this.autoSubscribeNewMembers=e.autoSubscribeNewMembers??!1,this.classification=e.classification??"",this.description=e.description??"",this.displayName=e.displayName??"",this.id=e.id,this.imageSource=e.imageSource??"",this.mail=e.mail??"",this.mailNickname=e.mailNickname,this.visibility=e.visibility,this}withLocallyUniqueId(){return this.id=c.o.generate(),this}constructor(){this.id="",this.displayName="",this.mailNickname="",this.visibility=l.X.Private}}var p=i(94283),h=i(679),P=i(21382),y=i(86053);class R{static get builder(){return new d}setProperty(e,t){if("id"===e||"imageSource"===e||"mail"===e)throw new Error("ReadOnlyException: "+e);if("visibility"===e&&this.visibility===l.X.HiddenMembership)throw new Error("ForbiddenException: Cannot change visibility of hidden groups");const i=this.getClone();return i[e]=t,i}toWebSerializable(){return{assignedSensitivityLabelId:this.assignedSensitivityLabelId,AutoSubscribeNewMembers:this.autoSubscribeNewMembers,Classification:this.classification,Description:this.description,DisplayName:this.displayName,Id:this.id,ImageSource:this.imageSource,Mail:this.mail,MailNickname:this.mailNickname,Visibility:l.X[this.visibility]}}toGraphSerializable(){const e={autoSubscribeNewMembers:this.autoSubscribeNewMembers,classification:""===this.classification?null:this.classification,description:""===this.description?null:this.description,displayName:this.displayName,groupTypes:["Unified"],id:this.id,mailEnabled:!0,mailNickname:this.mailNickname,securityEnabled:!1,visibility:l.X[this.visibility]};return!a()(this.assignedSensitivityLabelId)&&(e.assignedLabels=[{labelId:this.assignedSensitivityLabelId}]),e}getDiff(e){return h.B.getDiff(this,e,h.B.getDiffMomentCustomizer)}applyDiffs(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(!r()(t,e=>null!=e))throw new Error("ArgumentException: diffs - Diffs array contains null elements");return t.length>0?u()(R.builder.build(),this,...t,h.B.applyDiffMomentCustomizer):this}getClone(){const e=this.toWebSerializable();return R.builder.fromUnifiedGroupResource(e).build()}getDetailedInfo(e){const t=this.visibility===l.X.Public?y.p.Strings.UnifiedGroup_Public:y.p.Strings.UnifiedGroup_Private;let i="";if(this.assignedSensitivityLabelId&&e){const t=p.k.getFullSensitivityTitle(this.assignedSensitivityLabelId,e);t&&(i=P.G(y.p.Strings.UnifiedGroup_ClassificationOrSensitivityInfo,t))}return!i&&this.classification&&(i=P.G(y.p.Strings.UnifiedGroup_ClassificationOrSensitivityInfo,this.classification)),P.G(y.p.Strings.UnifiedGroup_DetailedInfo,t,i).trim()}constructor(e){this.assignedSensitivityLabelId=e.assignedSensitivityLabelId,this.autoSubscribeNewMembers=e.autoSubscribeNewMembers,this.classification=e.classification,this.description=e.description,this.displayName=e.displayName,this.id=e.id,this.imageSource=e.imageSource,this.mail=e.mail,this.mailNickname=e.mailNickname,this.visibility=e.visibility}}R.DescriptionMaxLength=1e3},94283:(e,t,i)=>{i.d(t,{k:()=>d});var s=i(55491),r=i.n(s),n=i(54320),a=i.n(n),o=i(91246);class u{build(){return new d(this)}fromSensitivityLabelResource(e){const t=e.sublabels?.map(e=>(new u).fromSensitivityLabelResource(e));return this.withPropertyBag({id:e.id,name:e.name,displayName:e.displayName,description:e.description,toolTip:e.toolTip,isDefault:e.isDefault,priority:e.priority,groupAllowGuestUsers:e.groupAllowGuestUsers,groupPrivacy:e.groupPrivacy,sublabels:t})}fromGraphResource(e){const t=e.sublabels?.map(e=>(new u).fromGraphResource(e));let i=this.groupAllowGuestUsers,s=this.groupPrivacy;const r=e.labelActions;if(r&&!a()(r))for(const n of r)if("protectGroup"===n.name){i=n.allowGuestUsers??!1,s=n.privacy??this.groupPrivacy;break}return this.withPropertyBag({id:e.id,name:e.name,displayName:e.displayName,description:e.description,toolTip:e.toolTip,isDefault:e.isDefault,priority:e.priority,groupAllowGuestUsers:i,groupPrivacy:s,sublabels:t})}withPropertyBag(e){return this.id=e.id||this.id,this.name=e.name||this.name,this.displayName=e.displayName||this.displayName,this.description=e.description||this.description,this.toolTip=e.toolTip||this.toolTip,this.isDefault=e.isDefault??this.isDefault,this.priority=e.priority||this.priority,this.groupAllowGuestUsers=e.groupAllowGuestUsers??this.groupAllowGuestUsers,this.groupPrivacy=e.groupPrivacy||this.groupPrivacy,this.sublabels=e.sublabels||this.sublabels,this}withValidData(){return this.withPropertyBag({id:o.o.generate()})}constructor(){this.id="",this.name="",this.displayName="",this.description="",this.toolTip="",this.isDefault=!1,this.priority=0,this.groupAllowGuestUsers=!0,this.groupPrivacy="",this.sublabels=null}}var l=i(21382),c=i(86053);class d{static get builder(){return new u}static getDefaultSensitivityLabel(e){if(a()(e))return null;let t=null;return r()(e,e=>{if(e.isDefault?t=e:null!=e.sublabels&&r()(e.sublabels,e=>{if(e.isDefault)return t=e,!1}),null!=t)return!1}),t}static getSensitivityLabel(e,t){if(a()(e)||a()(t))return null;let i=null;return r()(t,t=>{if(t.id===e?i=t:null!=t.sublabels&&r()(t.sublabels,t=>{if(t.id===e)return i=t,!1}),null!=i)return!1}),i}static getParentSensitivityLabel(e,t){if(a()(e)||a()(t))return null;let i=null;return r()(t,t=>{if(null!=t.sublabels&&r()(t.sublabels,s=>{if(s.id===e)return i=t,!1}),null!=i)return!1}),i}static getFullSensitivityTitle(e,t){if(a()(e)||a()(t))return"";const i=d.getSensitivityLabel(e,t),s=d.getParentSensitivityLabel(e,t);return i&&s?l.G(c.p.Strings.SensitivityLabel_FullTitle,s.displayName,i.displayName):i?.displayName??""}constructor(e){this.id=e.id,this.name=e.name,this.displayName=e.displayName,this.description=e.description,this.toolTip=e.toolTip,this.isDefault=e.isDefault,this.priority=e.priority,this.groupAllowGuestUsers=e.groupAllowGuestUsers,this.groupPrivacy=e.groupPrivacy,this.sublabels=null,null!=e.sublabels&&(this.sublabels=[],e.sublabels.forEach(e=>{this.sublabels.push(new d(e))}))}}}}]);
//# sourceMappingURL=gatedtsapi.c4a67746.chunk.js.map