"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[80819],{36591:(e,t,i)=>{i.d(t,{C:()=>o});class o{constructor(e,t,i,o,a){this.dispatcher=e,this.logicModuleProviders=t,this.entityStoreSet=i,this.clientSettings=o,this.loggers=a}}},62687:(e,t,i)=>{var o;i.d(t,{t:()=>o}),function(e){e[e.Plan=0]="Plan",e[e.User=1]="User",e[e.Workspace=2]="Workspace"}(o||(o={}))},64553:(e,t,i)=>{i.r(t),i.d(t,{DialogActionCreator:()=>D});var o=i(38752),a=i(49226),s=i(72438),n=i(36591),r=i(96891),l=i(97498),c=i(62687),p=i(40468),h=i(21382),g=i(74844),d=i(86053),T=i(82841);class D extends n.C{get name(){return r.M.DialogActionCreator}close(){this.dispatcher.dispatchAction(new a.u(this.entityStoreSet.appContextStore.getCurrentDialogData()))}openAssigneeLimitErrorDialog(e){const t=e?this.entityStoreSet.taskStore.getTask(e):null,i=t?.planId?this.entityStoreSet.planStore.getPlan(t.planId):null,a=t?.planId?this.entityStoreSet.planStore.getPlanDetails(t.planId):null;this.loggers.usageLogger.logData(r.M.ErrorDialog,"MaxAssigneeLimit",{taskId:t?.id??"newTask",planId:i?.id??"",displayAs:null!=i&&null!=a?p.T.getFirstDisplayableContextString(i,a):""});const s=h.G(d.p.Strings.TaskAssignmentControl_AssignTooManyErrorMessage,o.B.clientSettings.MaxTaskAssignees.toString());this.openErrorDialog(d.p.Strings.TaskAssignmentControl_AssignErrorHeader,s)}openCopyPlan(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CopyPlan,sourcePlanId:e}))}openNewPlan(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CreatePlan}))}openTeamSettingsDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TeamSettings}))}openNotificationSettings(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.NotificationSettings}))}openTaskDetails(e,t,i){const o=this.entityStoreSet.taskStore.getTask(e)?.taskCreationSourceType??null;this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TaskDetails,taskAccessContext:t,taskId:e,taskCreationSource:o,onDismiss:i,additionalLoggingData:()=>(o&&{taskCreationSource:String(o)})??{}}))}openTaskAttachmentDetails(e,t,i){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TaskAttachmentDetails,taskId:e,attachment:t,elementToFocusOnDismiss:i}))}openPlanSettingsPanel(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.EditPlan,planId:e,elementToFocusOnDismiss:t}))}openLeavePlanDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.LeavePlan,planId:e}))}openPlanResolutionWaiterDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ResolvePlanSpinner,planId:e}))}openInfoDialog(e,t,i,o){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.Info,headerText:e,message:t,buttonText:i,onButtonClick:o}))}openErrorDialog(e,t,i){this.loggers.usageLogger.logData(r.M.ErrorDialog,r.M.ErrorBarShown),this.dispatcher.dispatchAction(new s.o({dialogType:l.h.Error,errorHeader:e,errorMessage:t,correlationId:i}))}openFormsIframeDialog(e,t,i,o,a){this.loggers.usageLogger.logData(r.M.FormsRequirementsIframeDialog,r.M.FormsRequirementsIframeDialogOpened),this.dispatcher.dispatchAction(new s.o({dialogType:l.h.FormsIframe,formId:e,urlFormId:t,taskId:i,onDismiss:o,isOpenFromFormResponseView:a}))}openCopyTaskDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CopyTask,taskId:e,taskCreationSource:this.entityStoreSet.taskStore.getTask(e)?.taskCreationSourceType??null,onDismiss:t}))}openMoveTaskDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.MoveTask,taskId:e,taskCreationSource:this.entityStoreSet.taskStore.getTask(e)?.taskCreationSourceType??null,onDismiss:t}))}openDeleteRecurringTaskDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.DeleteRecurringTask,taskId:e,taskCreationSource:this.entityStoreSet.taskStore.getTask(e)?.taskCreationSourceType??null,onDismiss:t}))}openOnboardingCarouselDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.OnboardingCarousel,isAlternate:e,onDismiss:t}))}openPublishTasksToCalenderDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ICalendar,planId:e}))}async openTaskDetailsDialogFromDeepLink(e){let t;const i=e.indexOf("#");if(i>0){const s=e.substring(i+1);if(s.length>0)try{const e=JSON.parse(s);if(e.notificationType&&e.channel&&e.createdTimeTicks)try{const t=await this.logicModuleProviders.telemetryModule();try{await t.logNotificationTelemetry(e)}catch(o){}}catch(o){}else this.loggers.traceLogger.logTrace(507888157,g.k.Warning,`DialogActionCreator - openTaskDetailsDialogFromDeepLink_incorrectJson [json=${s}]`)}catch(a){this.loggers.traceLogger.logTrace(507888156,g.k.Warning,`DialogActionCreator - openTaskDetailsDialogFromDeepLink_exception [json=${s}]${(0,T.LB)(a)}`)}t=e.substring(0,i)}else t=e;this.openTaskDetails(t,c.t.Plan,e=>{})}openToastManagerDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ToastManager,onDismiss:e}))}openTryProjectDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TryProjectDialog}))}openRequestProjectLicenseDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RequestProjectLicenseDialog,projectSkuId:e}))}openTeamsAboutDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TeamsAbout}))}openSharePlanDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.SharePlan,planId:e,userIds:t}))}openMobileWelcomeDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.MobileWelcomeDialog}))}openRequestPremiumLicenseDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RequestPremiumLicense}))}openRemovePlanFromPinnedAndRecentsDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RemovePlanFromPinnedAndRecents,planId:e}))}constructor(e,t,i,a){super(e,t,i,o.B.clientSettings,a)}}}}]);
//# sourceMappingURL=dialogac.cf80531a.chunk.js.map